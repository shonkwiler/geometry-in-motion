(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(* If you do not have Mathematica installed, please either install the free Wolfram Player from https://www.wolfram.com/player/ 
or view this notebook on the Wolfram Community: https://community.wolfram.com/groups/-/m/t/3465926 *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    295866,       5626]
NotebookOptionsPosition[    291470,       5558]
NotebookOutlinePosition[    291898,       5575]
CellTagsIndexPosition[    291855,       5572]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Phase", "Title",
 CellChangeTimes->{{3.942162431404259*^9, 3.942162431766192*^9}, {
  3.956923861296624*^9, 
  3.95692386192301*^9}},ExpressionUUID->"be3fb36e-cbc3-4e1d-9ce9-\
a58e38fb442b"],

Cell[TextData[{
 "\[LongDash] ",
 ButtonBox["Clayton Shonkwiler",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://shonkwiler.org"], None},
  ButtonNote->"https://shonkwiler.org"],
 ", May 2025. Supported by NSF ",
 ButtonBox["DMS\[Dash]2107700",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.nsf.gov/awardsearch/showAward?AWD_ID=2107700"], None},
  ButtonNote->"https://www.nsf.gov/awardsearch/showAward?AWD_ID=2107700"],
 "."
}], "Text",
 CellChangeTimes->{{3.942162435839886*^9, 3.942162448642418*^9}, {
  3.942162645942397*^9, 3.942162665875545*^9}, {3.956848825264048*^9, 
  3.9568488277938223`*^9}},ExpressionUUID->"73bb5857-6b9d-4a07-8389-\
0236b856945b"],

Cell[TextData[{
 "The ",
 ButtonBox["Weierstrass elliptic function",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Weierstrass_elliptic_function"], None},
  
  ButtonNote->"https://en.wikipedia.org/wiki/Weierstrass_elliptic_function"],
 " ",
 Cell[BoxData[
  FormBox["\[WeierstrassP]", TraditionalForm]],ExpressionUUID->
  "3914aa02-1ba8-44ed-9ccd-de118bf8073d"],
 " is just about the simplest possible ",
 ButtonBox["elliptic function",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Elliptic_function"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Elliptic_function"],
 ", which means it is a doubly-periodic meromorphic function on the complex \
plane ",
 Cell[BoxData[
  FormBox["\[DoubleStruckCapitalC]", TraditionalForm]],ExpressionUUID->
  "21ddd893-7ec7-45bc-9dc8-50b2db37e84e"],
 ". "
}], "Text",
 CellChangeTimes->{{3.9421627216158247`*^9, 3.9421628759065127`*^9}, {
  3.942162955795603*^9, 
  3.9421629589374332`*^9}},ExpressionUUID->"64a0827f-10ff-408e-aba6-\
6fd0c748176b"],

Cell[TextData[{
 "A function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f6b927e7-8a55-4024-adf5-597b983f0433"],
 " being doubly-periodic means that there exist ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "1"], ",", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], "\[Element]", 
     "\[DoubleStruckCapitalC]"}]}], TraditionalForm]],ExpressionUUID->
  "8f6b8413-186d-4433-9bb6-eba0c024fb4e"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["\[Omega]", "1"], 
     SubscriptBox["\[Omega]", "2"]], "\[NotElement]", 
    "\[DoubleStruckCapitalR]"}], TraditionalForm]],ExpressionUUID->
  "44d710fe-a4e3-4207-ab39-4d63b478f39a"],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"z", "+", 
      SubscriptBox["\[Omega]", "1"]}], ")"}], "=", 
    RowBox[{"f", "(", "z", ")"}]}], TraditionalForm]],ExpressionUUID->
  "5076410d-d141-4a9d-8d36-67d07afddf25"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"z", "+", 
      SubscriptBox["\[Omega]", "2"]}], ")"}], "=", 
    RowBox[{"f", "(", "z", ")"}]}], TraditionalForm]],ExpressionUUID->
  "cbc0bd85-0d84-41ec-9e48-16c4091e8409"],
 " for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", "\[DoubleStruckCapitalC]"}], TraditionalForm]],
  ExpressionUUID->"03ba1773-3f4e-47de-a850-327afb1ef7f2"],
 ". More generally, this means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"z", "+", 
      RowBox[{"m", " ", 
       SubscriptBox["\[Omega]", "1"]}], "+", 
      RowBox[{"n", " ", 
       SubscriptBox["\[Omega]", "2"]}]}], ")"}], "=", 
    RowBox[{"f", "(", "z", ")"}]}], TraditionalForm]],ExpressionUUID->
  "01b85ad8-af1f-412a-ad7a-de9ab34f2c77"],
 " for any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", ",", 
    RowBox[{"n", " ", "\[Element]", "\[DoubleStruckCapitalZ]"}]}], 
   TraditionalForm]],ExpressionUUID->"f8e4c751-38fd-4367-a5de-750c6f80b9c5"],
 ", and so the behavior of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "fdc89ff7-d681-49e5-b5ba-6f3938373bbd"],
 " is completely determined by what it does on the ",
 StyleBox["fundamental domain",
  FontSlant->"Italic"],
 " which is (any translate of) the parallelogram with corners at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", 
    SubscriptBox["\[Omega]", "1"], ",", 
    SubscriptBox["\[Omega]", "2"], ",", 
    RowBox[{
     SubscriptBox["\[Omega]", "1"], "+", 
     SubscriptBox["\[Omega]", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "85140422-2528-470a-9e2b-8021ecd9b3b3"],
 ". Indeed, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalLambda]", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        SubscriptBox["\[Omega]", "1"]}], "+", 
       RowBox[{"n", " ", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], ":", "m"}]}]}], ",", 
      RowBox[{"n", "\[Element]", "\[DoubleStruckCapitalZ]"}]}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"219ca34e-e38f-4c5c-9b86-e92fc67ddc77"],
 " is the lattice determined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Omega]", "1"], ",", 
     SubscriptBox["\[Omega]", "2"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "1906951b-c5ab-4ef4-a5da-2bed1abe4333"],
 ", then we can just as well think of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "1f2e3cc2-78bb-4175-b358-5b4d23567529"],
 " as a function on the quotient space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalC]", "/", "\[CapitalLambda]"}], 
   TraditionalForm]],ExpressionUUID->"439ee0f2-a2b3-4644-9ff5-1b5325fdea8c"],
 ", which a topologist or differential geometer would probably call a ",
 ButtonBox["torus",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Torus"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Torus"],
 " and a number theorist or algebraic geometer would probably call an ",
 ButtonBox["elliptic curve",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Elliptic_curve"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Elliptic_curve"],
 ". This is the source of the name ",
 StyleBox["elliptic function",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.942162884889336*^9, 
  3.94216334320936*^9}},ExpressionUUID->"f4d8a744-8125-4a9e-b7c5-\
d2128b5ba2ad"],

Cell[TextData[{
 "If a doubly-periodic function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f8b96771-cab6-4ec0-9f90-d2bcb3df5de8"],
 " is entire, then it must in particular be continuous and hence bounded on \
the fundamental domain, and therefore on the entire plane, so ",
 ButtonBox["Liouville's theorem",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Liouville%27s_theorem_(complex_\
analysis)"], None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Liouville%27s_theorem_(complex_analysis)"],
 " implies that it must be constant. Therefore, any non-constant \
doubly-periodic function must have singularities, and the ones with only \
isolated poles (i.e., the meromorphic ones) are the elliptic functions."
}], "Text",
 CellChangeTimes->{{3.942163368376932*^9, 3.942163553986016*^9}, {
  3.9421672904602613`*^9, 
  3.942167291893999*^9}},ExpressionUUID->"2495a70f-8811-4504-a51b-\
20be3c24a3dc"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox["\[Gamma]", TraditionalForm]],ExpressionUUID->
  "d2c73be1-fc1d-4637-866b-e2ba9e4c03fd"],
 " be the boundary of the fundamental domain of an elliptic function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "481437db-1d89-4faf-a270-84f103374309"],
 ", oriented clockwise. Then\n\t\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[ContourIntegral]", "\[Gamma]"], "f"}], "=", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["Res", 
        RowBox[{"z", "=", 
         SubscriptBox["z", "k"]}]], 
       RowBox[{"f", "(", "z", ")"}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "a727bf7e-fa46-4245-9e7b-c97192e4c57e"],
 ",\n\t \nwhere the first equality follows from double-periodicity (since the \
values on opposite sides of the fundamental domain are the same, but \
traversed in opposite directions) and the second equality is the residue \
theorem (here the sum is over all poles in the fundamental domain). Since the \
sum of residues can\[CloseCurlyQuote]t be zero if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "94554101-bcab-46f9-ab69-da9973fbcd00"],
 " has a single simple pole, this proves:"
}], "Text",
 CellChangeTimes->{{3.942163558307239*^9, 3.942163580919796*^9}, {
  3.942163613336782*^9, 3.942163682063885*^9}, {3.942163726500335*^9, 
  3.9421637468656187`*^9}, {3.942163794775056*^9, 3.942163837069314*^9}, {
  3.942163880493791*^9, 3.942163974347643*^9}, {3.942164012712323*^9, 
  3.942164176602528*^9}},ExpressionUUID->"80092950-0a10-4bde-a47a-\
51456024c322"],

Cell[TextData[{
 StyleBox["Theorem.",
  FontWeight->"Bold"],
 " Any elliptic function has at least 2 poles (counting multiplicity) in its \
fundamental domain."
}], "Text",
 CellChangeTimes->{{3.942164179397105*^9, 
  3.942164203363947*^9}},ExpressionUUID->"143abd80-cc3d-499f-92af-\
09bfe23bc03d"],

Cell[TextData[{
 "If you try to build an elliptic function with a single pole of order 2 at \
the origin (and hence also at all the lattice points) and so that the leading \
term in the Laurent series at the origin is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox["z", "2"]], TraditionalForm]],ExpressionUUID->
  "4d55336d-716c-4797-a3b5-3b55e2c0f530"],
 ", you end up with the Weierstrass function\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[WeierstrassP]", "(", "z", ")"}], " ", ":=", " ", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["z", "2"]], "+", 
     RowBox[{
      SubscriptBox["\[Sum]", 
       RowBox[{"\[Omega]", "\[Element]", 
        RowBox[{"\[CapitalLambda]", "\\", 
         RowBox[{"{", "0", "}"}]}]}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"z", "-", "\[Omega]"}], ")"}], "2"]], "-", 
        FractionBox["1", 
         SuperscriptBox["\[Omega]", "2"]]}], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"d96acd72-282e-42c8-b3c6-87f2b0a51d66"],
 "."
}], "Text",
 CellChangeTimes->{{3.9421642118440657`*^9, 3.942164395333227*^9}, {
  3.942164525569029*^9, 
  3.942164531854065*^9}},ExpressionUUID->"5c4cb8d4-4545-4396-acef-\
50a1899b5ddd"],

Cell[TextData[{
 "(This is explained very well in sections 1.5\[Dash]1.6 of Apostol\
\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["Modular Functions and Dirichlet Series in Number Theory",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1007/978-1-4612-0999-7"], None},
  ButtonNote->"https://doi.org/10.1007/978-1-4612-0999-7"],
  FontSlant->"Italic"],
 ".)"
}], "Text",
 CellChangeTimes->{{3.942167874325493*^9, 3.942167883269085*^9}, {
  3.9421679316131983`*^9, 
  3.942167972371149*^9}},ExpressionUUID->"469cf483-a136-4a05-ac18-\
0ae7f0607cd0"],

Cell[TextData[{
 "Of course, ",
 Cell[BoxData[
  FormBox["\[WeierstrassP]", TraditionalForm]],ExpressionUUID->
  "5b5cb978-efe7-4256-b3f2-484fad699249"],
 " depends on the periods ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "daae10fb-746e-41cd-9b94-0727268709eb"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "67d139ce-e762-4b77-bb24-57ea3c9f6030"],
 " (or equivalently on the lattice ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "36d060bd-5006-4647-a4c8-4d105c2d79d0"],
 "), so it is sometimes helpful to indicate it by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[WeierstrassP]", "(", 
    RowBox[{
     RowBox[{"z", ";", 
      SubscriptBox["\[Omega]", "1"]}], ",", 
     SubscriptBox["\[Omega]", "2"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "a61727bf-15e1-44d7-be6a-bc7bdb1f87e5"],
 "."
}], "Text",
 CellChangeTimes->{{3.942164400851919*^9, 3.942164479346387*^9}, {
  3.942167984309968*^9, 
  3.942167987435374*^9}},ExpressionUUID->"61f750c0-f2bf-49c5-816c-\
a8f7eedc301f"],

Cell[TextData[{
 "As in Mathematica\[CloseCurlyQuote]s definition ",
 StyleBox["WeierstrassP[z, ", "Input"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["g", "2"], ",", 
      SubscriptBox["g", "3"]}], "}"}], "]"}], TraditionalForm]], "Input",
  ExpressionUUID->"c43e4a64-ca1f-4c12-9a10-e186d09ed562"], "Input"],
 ", it is also common to write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[WeierstrassP]", "(", 
    RowBox[{
     RowBox[{"z", ";", " ", 
      SubscriptBox["g", "2"]}], ",", " ", 
     SubscriptBox["g", "3"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "33c76309-fd0b-4192-a0c7-7a7a25c39333"],
 ", where the invariants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "2"], TraditionalForm]],ExpressionUUID->
  "7ac9b787-7cf6-4ac8-9d74-2c3bd78e3c5e"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "3"], TraditionalForm]],ExpressionUUID->
  "d7fa7203-1642-459d-86e6-d8c9df88c6d0"],
 " are functions of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Omega]", "1"], ",", 
     SubscriptBox["\[Omega]", "2"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "679b55e7-4f85-4273-b6e4-cc62ed54135f"],
 " (or really of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Tau]", "=", 
    FractionBox[
     SubscriptBox["\[Omega]", "2"], 
     SubscriptBox["\[Omega]", "1"]]}], TraditionalForm]],ExpressionUUID->
  "c43b20c7-8675-48cc-9be6-65df41d5b87c"],
 ") that show up as coefficients in the Laurent series of ",
 Cell[BoxData[
  FormBox["\[WeierstrassP]", TraditionalForm]],ExpressionUUID->
  "416caa8e-7c2c-46d1-a33f-b2dd6a21a7ee"],
 " and also in the differential equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[WeierstrassP]", "'"}], 
     SuperscriptBox[
      RowBox[{"(", "z", ")"}], "2"]}], "=", 
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox[
       RowBox[{"\[WeierstrassP]", "(", "z", ")"}], "3"]}], "-", 
     RowBox[{
      SubscriptBox["g", "2"], 
      RowBox[{"\[WeierstrassP]", "(", "z", ")"}]}], "-", 
     SubscriptBox["g", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "b455f0d1-70c6-44e7-919d-15ce41c38b6a"],
 "."
}], "Text",
 CellChangeTimes->{{3.9421646736000023`*^9, 3.942164804727869*^9}, {
  3.942164852625646*^9, 
  3.9421650177789717`*^9}},ExpressionUUID->"615f730f-0391-47ed-a0a9-\
f284a7cd12a9"],

Cell[TextData[{
 "In any case, Mathematica can easily convert between (half-)periods and \
invariants using ",
 StyleBox["WeierstrassInvariants", "Input"],
 " and ",
 StyleBox["WeierstrassHalfPeriods", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.942165028851817*^9, 
  3.942165076173809*^9}},ExpressionUUID->"fbf2d266-d70f-48c3-8875-\
2dd8317be453"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s a visualization of ",
 Cell[BoxData[
  FormBox["\[WeierstrassP]", TraditionalForm]],ExpressionUUID->
  "b702bcc2-e39f-41ff-b626-ff992084890e"],
 " on the square lattice using ",
 ButtonBox["domain coloring",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Domain_coloring"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Domain_coloring"],
 ", which shows phase as hue and modulus as brightness:"
}], "Text",
 CellChangeTimes->{{3.94216510585226*^9, 3.942165107604587*^9}, {
  3.942165544377498*^9, 3.942165601207447*^9}, {3.942165686634313*^9, 
  3.942165690393678*^9}},ExpressionUUID->"30d4bc74-67fa-4a03-b446-\
d9e543c2f55f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g2", ",", "g3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g2", ",", "g3"}], "}"}], "=", 
     RowBox[{"WeierstrassInvariants", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"I", "/", "2"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ComplexPlot", "[", 
       RowBox[{
        RowBox[{"WeierstrassP", "[", 
         RowBox[{"z", ",", 
          RowBox[{"{", 
           RowBox[{"g2", ",", "g3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"2", "I"}]}], ",", 
          RowBox[{"2", "+", 
           RowBox[{"2", "I"}]}]}], "}"}], ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".005", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "n"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "n"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"PlotRange", "->", "2"}], ",", 
      RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.942148147644608*^9, {3.942148250991031*^9, 3.942148255015229*^9}, 
   3.942165157101314*^9, {3.942165240099424*^9, 3.942165247667341*^9}, {
   3.942165480136485*^9, 3.942165532928282*^9}, {3.942165608798459*^9, 
   3.942165614665683*^9}, {3.942168052578294*^9, 3.9421680805893517`*^9}},
 CellLabel->
  "In[2942]:=",ExpressionUUID->"8bc86e56-db1e-4d9d-aa41-efbc832d252d"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx12y+o3mUYh/GDGkyCdUXEalwxDJ9kVNFinWAwKWPt1BlXDEarxTCjIDgX
DFoEwaBDBBFEREQGIiJ4zt7nc4sX/FYeLnbYe3Yunj/3977P06+/9cobj5yd
nd169Ozsct1/7lpv37n/9eNf/vMpvnL94w+efO/v4Qs4v3L9r+Gr92689Myz
fw5/9hAfDL94QVfv/TH83cW/fu3278NfXeKdX4d/efPWT++/8PPwY5d/ff/H
4Wuv/XbxFd8P33j4DX7z3+ddfrvnXwy/fX75BR8Nf3Li5/HN09cPv3P694Zf
Pn3e8BOn72f4wen7Hf729P8Z/uH0/x1+9fTzGP789PMafu708xz+8PTzHn7q
5GP43ZOv4b2u8Hjtyi/mF/OL+cX8Yn4xv5hfzC/mF/M7n7f9Yn4xv5hfzC/m
F/OL+cX8Yn4xv5hfzC/mF/OL+c2+XEf7tF678ov5xfxifjG/mF/ML+YX84v5
nc/bfjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfzmnF1H5273ab125Rfz
i/nF/GJ+Mb+YX8wv5nc+b/vF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfz
m3tzHd2jPXe7T+u1K7+YX8wv5hfzi/nF/GJ+5/O2X8wv5hfzi/nF/GJ+Mb+Y
X8wv5hfzi/nF/GJ+Mb95B62jd1Hv0Z673af12pVfzC/mF/OL+cX8Yn7n87Zf
zC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv3nXrqN3bt9FvUd77naf1mtX
fjG/mF/ML+YX8zufs/1ifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5TZ2y
juqWvnP7Luo92nO3+7Reu/KL+cX8Yn4xv/N52y/mF/OL+cX8Yn4xv5hfzC/m
F/OL+cX8Yn4xv5jf1J3rqA5t3dJ3bt9FvUd77naf1mtXfjG/mF/M73ze9ov5
xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+Y3OcI6yhVah7Zu6Tu376Leoz13
u0/rtSu/mF/M73ze9ov5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+Y3udA6
yomaK7QObd3Sd27fRb1He+52n9ZrV34xv/N52y/mF/OL+cX8Yn4xv5hfzC/m
F/OL+cX8Yn4xv5jf5HzrKPdrTtRcoXVo65a+c/su6j3ac7f7tF678juft/1i
fjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5TW67jnLc5n7NiZortA5t3dJ3
bt9FvUd77naf1mtXfjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfwmh19H
uXxz3OZ+zYmaK7QObd3Sd27fRb1He+52n9Zr16mPNk99tHnqo81TH22e+mjz
1Eebpz7aPPXR5qmPNk99tHnqo81TH22e+mjz1Eebpz7aPPXR//luc/jmts35
mgs1R2jd2Tql79q+g3pv9pztvqxH3JVfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL
+cX8pk+2jvpm7bPw29y2OV9zoeYIrTtbp/Rd23dQ782es92X9Yi78ov5xfxi
fjG/mF/ML+YX84v5xfxifjG/6Xuuoz5o+2b8Nodvbtucr7lQc4TWna1T+q7t
O6j3Zs/Z7st6xF35xfxifjG/mF/ML+YX84v5xfxifjG/6WOvo752+6D8tq/S
HL65bXO+5kLNEVp3tk7pu7bvoN6bPWe7L+sRd+UX84v5xfxifjG/mF/ML+YX
84v5zVzCOppTaF+b3/bJ2ldpDt/ctjlfc6HmCK07W6f0Xdt3UO/NnrPdl/WI
u/KL+cX8Yn4xv5hfzC/mF/OL+c2cyTqaO+mcAr/te7ZP1r5Kc/jmts35mgs1
R2jd2Tql79q+g3pv9pztvqxH3JVfzC/mF/OL+cX8Yn4xv5jfzA2tozmizp3w
2z52+57tk7Wv0hy+uW1zvuZCzRFad7ZO6bu276Demz1nuy/rEXflF/OL+cX8
Yn4xv5hfzG/mwNbRXFjniPjtXEL72O17tk/Wvkpz+Oa2zfmaCzVHaN3ZOqXv
2r6Dem/2nO2+rEfclV/ML+YX84v5xfxifjPXt47m/Pjt3FDnTDqX0D52+57t
k7Wv0hy+uW1zvuZCzRFad7ZO6bu276Demz1nuy/rEXflF/OL+cX8Yn4xv5nT
XEdzm/x2DqxzQ50z6VxC+9jte7ZP1r5Kc/jmts35mgs1R2jd2Tql79q+g3pv
9pztvqxH3JVfzC/mF/OL+c3c7Tqaw+W3c32dA+vcUOdMOpfQPnb7nu2Tta/S
HL65bXO+5kLNEVp3tk7pu7bvoN6bPWe7L+sRd+UX84v5xfxmjnodzVXz2znN
zvV1DqxzQ50z6VxC+9jte7ZP1r5Kc/jmts35mgs1R2jd2Tql79q+g3pv9pzt
vqxH3JVfzC/mN3Px62hOnt/O3XZOs3N9nQPr3FDnTDqX0D52+57tk7Wv0hy+
uW1zvuZCzRFad7ZO6bu276Demz1nuy/rEXflF/Ob33NYR7/3wG/nqDt32znN
zvV1DqxzQ50z6VxC+9jte7ZP1r5Kc/jmts35mgs1R2jd2Tql79q+g3pv9pzt
vqxH3JXf/N7KOvo9Fn47F9856s7ddk6zc32dA+vcUOdMOpfQPnb7nu2Tta/S
HL65bXO+5kLNEVp3tk7pu7bvoN6bPWe7L+sRd+X36PeS+MX8Yn5x56o7h9u5
zc75dS6sc0SdO+mcQvva7YO2b9Y+S3P55rjN/ZoTNVdoHdq6pe/cvot6j/bc
7T6t167/AmEkh+0=
     "], {
      {Opacity[1.], Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
mWXiiVH6sdfrRxu5x8oFFzPFDlEyD8gvFzDLwXDzsvnFGX3vMdX4YdHSrxvU
n0nsfR/WDr5in7zNvpjHhmWzk1LZFTHsx6mMwTQKPmdxs3RQVvZCd7NBd7dU
9+iqtjVC2eMnHPXgzFrTlk8vkE8MMo+1co7Wb50sEV5OlTiFyWBIVYSzNt/O
2HDJ8uqkbuCoYuqwYOXAGmPfCvvn4bXDz9mnq9lWuWzfLHZ6CvtGPOtFGn0s
lUwtmOGVvVOUP9XX1enuF+qaErXtofJeb/6Y69r8BcrqqRnK8V7W0eaNozd5
ZwqENkkSlyA50kMT76QrtTU9uGDuPA4OH5XNHuIRfmGx9i6s/dK7dvQx+2wp
2zqXHZLJzk1g30livk6nTUNmFdI2bs1I697qGp/on9bon2fq3sbJRwJ4057s
5csk4vlJ2pke9qnmjRO3eWdKhdYZYqdoqaefwsddk+SiK7U33rtsaT+r7z+l
njghwR3bohxhrh+aXz/Zy7Fq4jhVcPzLOPn5G4156+9KWMvlpK26cUXda8PD
B/pnFfq2NLA3Sjrmy511Za5YrZLPjTFOd66dfLx5opZ/vlB4JVXiEiGDQ365
AenO+ut2pkdWlo7TuqGTyqkTouVjm7Qj1PXDU+tnujjW9zguFZzIUk5Z9saT
wvXhEiapakVwe0RV/9LQdFffXKx7naLuDxeNYzYWHOmrFxcpZ4eZp1+tn3zA
PVHFv5gnskuSuIbIkUhVuBuY7WSotTU/vWjuPgWOnJTPHhfgj3GYhwnrR8fW
z7VzrtziuJdzkoo3ajI2XhStjRczmDcWRbf7gXsthid1+pY8XWeicihYMIlc
x12hEi7MUs/2s061ck7c3TpVIbC6JnaIl7oHylEwdayrtsDBcMfG/OK88d0p
YOyEbP44n3h0jX1oaf34EOdCC8e+ch1Wzsks3LidzXlTwp6DzLqzzn+GUzX3
G1+1GDpr9IM5qolYwYLPOt6ZRLGdYlj1rp1/sXn2Lu/cdYF1nsjhqsQtUobw
Vfh6ahLctAXOhlv2pifW253n9YPnNJPnZEvn+JTzHM65lc0rI1zP51xsw1b2
Hd7DGl7/3U1iI0PUPAu8eGt802ToKtcPZ8qnInk4NIvouEq1+cC81L1+/hn3
zB3ehXKhTbbYMUnqHiZDQn55aK666kqcDPV25pbL5rfndCPnVDPnJCvnefTz
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
tJ8n5k4T8W/KrhOcy3cHrxDyHGVxMVDgQ8ircMerQuxZy/d8xfFoYXu0Mdw7
6W69NNePFJcjztd+Cmc9iznil5etFxasF6etFsctF4fMEX1miA8mS+8Ml17p
Lz/TXim7uZqps3bXBu3uiz07Qfqv3XIN2rGyVm1mhpcsJg7yy4S8Sra8noo8
63ierzc83rI82hnuXXS3PqrrINl5lOR4xBSr+OV5lIqVXpizWpyyWhyzQAya
I3pMEe3GSy2Gy/V6yGqtlZLrq2kGa5EOaPsY3Ddk/H/vBOtgfu6oMxY8CIQi
kiDvbMirdNOzWuj5kufRtOHxjunRse7eTXPrp7oeQdmOk/gjABx9hOytHbF7
SPP5JbP5RdO5eZO5GaO5T4ZzEwZzI/pzH/XmenXn23UWmzSXnl5bTfLD/sC9
FpEaKHMv2HZ5znVsYti/p9l+oNj0kGz6iNYfCTZDeJsRvM043mYCZ/OFvT1i
iv/NSlvML5vPI8zmF0zn5oznpo9qjRvMDevPDejNd+vOv9dZfHVnuUx3LbKJ
8NeVn4di7kLupRLnFxsOzet2bVTbTrKqVj/RepBgM4y3GQW1cDaTOBvQqSPO
94gpVtWy+D+1TOZmj2pNGs6N6c8N6c3168136S6800a8vIUstFjzZi9/06rF
DLoPuVUInRrYDm/X7dqptl1km16SzQDR5kutsX/XOrqpP2r9sYAW80vmYAHn
549qTR0t4Kj+3KDeXJ/u/AedhRYtxPPrqExntJmy8Hq+jcwzE3Kt5js1suzf
0W07KDbdRws4ABaQoFrAsT8X8M9aX3hYUBH8bDWDsZzGWH7CWkxiLSaw5mNY
sxGs2TDWbBBn3o+36CFYfSDbvaWDBkUkQAfvTqmw4sUGnbkPOrMDOrMjujPj
ejOf9GdmDGbnDGcXjGcXTeaWzOaWzefAioF7Wf3C+f6n1tQftczH/6w1hDP7
iDPvw1t2E63bKfZv1l0rhQ+9ZaBlN1fytBeadOa6dGY/6syM6s5M6M1M6c+q
ahmpaiFMVbWQR7VAobUvN2V5VMgK3NQUVlVr4qjW6NFNgVoDoBbBsoto00Zx
bGS6l0hBs9wwOneWy7Xn3+nM9ejMDurMjOnOTB7VmjWcnQe1TOZArWVVrT9u
au3/LuCXWv9ZwNE/F3AAb9FLsOok2bbSnOrZoE3M4zkmawFaiGfa8206s306
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
llOvpVIMEymBsZQHwZTyMNLbaPxEJBqXPMNK7xVnNMoLKxTlufLqBHl9kOy9
h2jAjj1pSEFcXVu7PEFUb6erP9u4ksvTjv+DX44xURbpHTTe3O27tPXpiJUm
HUPSjg9Sz76mqhdTrqdQrBMo4dGUTH9KVQSxIxo3A5qViKPnTwuKumRl9cqa
MsXLNEVzlKzbTzjixJo1JiNvoTDXx0kaHfQrdewrRVzNBwKjSLG156abFRRn
piwy2K/XPOi6Co1dliyoczDnabTTCPr5AbpGI10zn2aYQQ+9T8+OpT9PpPam
EpcfrDILxkVFbfCTWuXzIkV9svxd+FafN3/cjjGvT0TdXMJdG6ZotDKu1Gxc
zefpJAtNQyW2oF+WcIrJ7mP9g6bbe70aOxOXRUsX2bhzJPrpOfrFbvq1Orp2
Fs0inR6TQi+MojckU4ZSCOjMZXbhkLSwRVlZrazNUzTEydtCpAMe3Elr+qI2
fvXGHP5qP/XKG+aVSs6NbL5evMg8UGLvuB1iIU833nuqe/juhvKjxtbUJQHy
ApOohqWf/US/1E6/8ZSum0lzfkhPTKKXxdJaUsgTyXhizjy3qH+75LWyqkLx
IlPxOgb+ECgect2YNqcu38agr08Rr3bTrrxiXSnj3k4XGMSKLH2ljrY7UeaK
XKO959qHHVflw1c2Zy/xVi+sk8+g6Gqj9Mst9FuldP1Mmm8aPS2eXhlHbU8l
zYFm5ZFZVfOS6h5lfePum1Ll+1R4IEo86c1etKas6q3iNCfJt7ro11+xrj3h
3MnhGyQJzcMldp6b7jYqfjnXZK9a//Ddnb3+G7LJ6xLENS5WY512CcW4PsLQ
bWGYlzBci5kZuazabGZfIQ1VguNUT23VdOy+erHbUqjsSJINhQmn3JlL5qQ1
nWX8nVHKzfb16y/Y10q5WpkCw3iRZfARv2wNJZori4z363QP228pB6/vTF0T
LV/dwGtQ1y8hGDcHGPqvGFYlzKAiZn4W61UuY6SQiitf41ePyWpbd1/XKN/m
KLritkeC+DPO60gjAkZ7gXh7kHrjHeP6843rRTydNIFxrNgqQOropOKX75sp
S432G3QOO28ohq9vzV4Toq6ySVeI61dmGXe6GUbPGbYlzJhCZulDVkv++lQB
hVq5LKoehF807zZVKN8+VPTGSsf8uXP2tBV9LFZrhnSrj3bjDfNaFedmPk8v
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
4r1p+V6U6gBiXyAWEbxIjx/lJrVuJlUqs4sUhemK0miwwgdocBZ3W62P6THm
r+Exl95TLrSyLpStX3vI1w4Xmx31+T7U3a+6vdd9cfv9uY3lkwzaT/OMX7rp
Jyvp5x/SrtyjmUfSAoJpD9xpRT7kukDCcABmOXyedX+Q96BpO+WF8tFjRVGK
4lkEWOUle+co7DNfm9SmIa+gcRdHqRca2RdKuDeTBXpBkF8ONlLmakOrnvsv
SGbPcrDHKYwfpxm/ttJPP6dfSKJdi6XZRtBCA2npLrRSP1JzEH7SH02InmEn
9gof1MrSnyvzoBd7Fc9DwDce2612/EET9rQ6GXUZSbg4QL9Qs3bh8YZagtDQ
V2JjIY823C3WPHx3FRz+TTR/ZpVwDM/4aYxxvJF+pph+MY6mFkNzCaNF+9Gy
3akV/qSOINysaljhOHrK1EZG53bWa2VxsbIsXVEZoWjw3ep24o2Zr8A1yMvX
EcQrg/TL9auXSri30gW6kWJzd6jPN95ot1j7oOHmTv/lrekLvOWzLOqJZebJ
Yeb5OsbVAsadBwxYAiMiipHtx6iMoPRGE5GxS6y0MX5mi+xRpbKkQFmerKgK
Ad95SfrsuRMmzIU7RMy1OdKVHsblN2uXCjbUHgj0Q8SWkF8Gkw32nmsetlxT
DF+SzP3GxZ5hMI4hmKf6mL9VM65lM+4mMVziGPfCGY+D6G+jKMNRBEwCYvXh
kCizEcgvVz7NVb5IULwJkre6iwZgnCkDOvImDnv1PeVyB+tSJedKLk8jQWj0
h19WZOrvV6ofdFwFxi6JFs5zCKcpzGMzzDMdzIsVjBspDI1Ehvc9RlII40kI
rSmaPBmJJz2Y42T0SjJqlAWlymdZipexilp/aYerYNhqdUaHirqxhL86Sr3c
vHKpbP16Fl8rVmTivWlrJY803snT3X9zZ6/nimzyomDxHJt0Es88PsE828y8
/JRx6wHD+D4jKIaRHsB4Hk5th9bO4+hJpJX8WWFhF1BavVNZpHybrGwOl/Z7
8Sdt2Qv6FLTaIvHmCP16y8q1l+vX83iaSUKjMLEV5JflsSbKPP39VxqHnTcU
o9c24Vd4mIsrtHMY1m/jrOtNLPVilmEmyz9tJSNu5WUiszeFikrHrhVMigtb
oWX7r/KVNQmKtpCtQfeNKWsWUouEvTNPvjnAuN6wevU591Y2XztBaBIksfni
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
cpWYMcnM6xPltSrLb6lqS5WNV5XNEUBngPC1+9aENWXuFGbt2DT+z5c0Eyiu
Mu7llL/45SwbbeNFQ88xYMyEv/D7BnYvivLrBGV/J+WPOvKxTNKlNFJQEulq
JOl6GPFhDG4gFrUQv0TJGmPnvZDk31dV1ihvFipvJ4MtCHk3nP/GdXPSgrR4
Yg11dIL45zO6SSPrdCHPIkHovMsvF1rpms/rXh2VTR7mIg/SCHuWKXuGKQce
k49cJ5/IINmlksITSNlhpJpwwpNY7Gjs+uqVOVrOMDe/U1bUpKqqUt7KVd5J
ANtCpD0+3GEnxvQlAvL4EvroCNmkfcOkln0ul2cdI3LzlMfaqyos9G1n1W/+
lEz/wVo9QCH9Mk/512vKwQdkkxLSqXSSWwopNo5UGESqj8Q/i8NMRq9h0mY2
cgf4+U8UpY2qG9eU9VnKu9Fge5C4z5P91p72wRS3cuwj9s8Biknrpsl1zoUM
vl24GOaqSLFV15gZOk8ph01EHw4xUfsJlJ+nKft6KL/fIR/NJZ2+SvK5QroS
TSoLJt2NxvfGoWchsZLRlKIpTnmfrPKhuv6m6m6hsiVR2Y0QvfFlTTpS5y9g
1059wJ0YoBx7vHnsJtu0gGeV9Be/nG6nrrHQt5/TvDkue3+UhzzMwB9EUw9M
Ug8/p55ooJ7PpzjnUBLSqOVR1OYU4sBV3FLGCr1kglf+XFF9X9VYrWrOUbbF
AT0hgmEv5pQdeeksCnVqinC8j3ashXmsin0hh28bJ3SD9HICc201DWaGZ2dU
w8clM39yVv+gEQ+sUH97SzXpoJ6qoVzMo/hkUdJSqFWxlLZU4mgadi1ncaNs
RFjeqaxpUt2uUN3PULZHy/uCeG9hG7NWROSZFfTJceLx5/Rj97ZOXuNczuDb
R4pgXrJoR2WJtfbeJcPLk+DbY6KPJizUIQpl3wL190Hq0VbqmXLK5TxKcCYl
O4lal0DuTCNMpmJwBR+3yt+Iyx6r6xpUTaWqBynKzkjpa3/OuCv9oxl+5fQi
9sQI+Xgn41gj60wJ1yJV4LjLLyc5qCqtdA8v6F6dUEwcFSwcYWJ+J1D3zVIP
9VGP3aOeK6CY51Ii0ymF8dTbV0g9V/EfILEK8IzaD4K6frDpkbq1Vv0kV9Wb
KBkJ5Ux70Jcs8OsX5vBnhymnuxgnm7bOVHDMsvn28bv8sqsi1VFVaaO7b2Z4
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
           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroupBox[
        TagBox[PolygonBox[CompressedData["
1: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
Py0=
          "]],
         Annotation[#, 
          "Charting`Private`Tag$216261081#1"]& ]]}, {}, {}, {}, {}},
     VertexTextureCoordinates->CompressedData["
1:eJx1mz2oXEUUgB/aBK3SBhuxtRQ7SSdoI1rZxp/CSrANsUorWEUrwSpg5ZRJ
N0EsJiAMgUEGCf7/Xi/Pytb3Fr9zOd/utRm+7O59O37MzJlzzj771vtvvPvE
2dnZ7SfPzi5H//fpzWs37t39/HrmEvzOvbtX79y8r9dr8IeXePVrvb8Fv/rm
+t7tX77R53vw0w9f+ujL7x7peSP4n4tPf/byt3r+DB5XDg8IfuXw9x4HP350
+Ybvgz85/P0fgl9/7vl/X3jwY/BTh8f9FPzVB69dvOPn4FuH7/dr8IsPLt/w
W/D54fv+HvzFxbe9duOP4LcP3//P4GcuH3fnL81nCf744n/OlYd/a35r8P9/
Vbx5PT2WYPzm12swfvP7WzB+8+d7MH7z80YwfvPzZzB+YfzC+IXxC+MXxi+M
Xxi/MH5h/ML4hfEL4zfPZwnGb57fGozfvXV62us2Zr/8ew3Ofov8Fvnl8z04
+y3yW+S3yG+R3yK/RX6L/Bb5LfJb5LfIb5HfIr9Ffov8Fvkt8lvkt8hvkd/j
fff0Ot28esQvjN/8vhaM3/z5Hozf/LwRjN/8/BmMXxi/MH5h/ML4hfEL4xfG
L4xfGL8wfmH8wvjN81mC8Zvntwbjd+8cPb3vliOP+fVtzOu3hl84r98afuG8
fqvWb9X6reEXzuu3av1Wrd+q9Vu1fqvWb9X6rVq/Veu3av1Wrd+q9Vu1fqvW
b9X6rVq/Vev3OC46fY6Wo3Vpj7BH/ML4zZ/vwfjNzxnB+M3Pn8H4hfEL4xfG
L4xfGL8wfmH8wviF8QvjF8YvjN88nyUYv3l+azB+9+Lc03HRdo563/U6tVeP
eX9u4RfO+3MLv3Den1v4hfP+3LQ/N+3PTftz0/7ctD837c9N+3PT/ty0Pzft
z037c9P+3LQ/N+3PTftz0/58fG85HeeWo3PT+6zXpT3CHvEL4zc/bwTjNz9/
BuMXxi+MXxi/MH5h/ML4hfEL4xfGL4xfGL8wfvN8lmD85vmtwfjdu4eevrcU
rbP7er0e7bNel/aYP7+N+fzt4RfO528Pv3A+f7vO367zt+v87Tp/u87frvO3
6/ztOn+7zt+u87fr/O06f7vO367zt+v87Tp/j/MK+PU9xXGt4yCfm95nvS7t
EfaIXxi/+fkzGL8wfmH8wviF8QvjF8YvjF8YvzB+YfzC+IXxm+ezBOM3z28N
xu9enijHV9u90/cUx7WOg3xuep/1urTH/LxtzPHVCL9wjq+G4quh+GoovhqK
r4biq6H4aii+GoqvhuKrofhqKL4aiq+G4quh+GoovhqKr47zfvh1HsH3Tt9T
HNc6DvK56X3W69IeYY/4hfEL4xfGL4xfGL8wfmH8wviF8QvjF8YvjF8Yv3k+
SzB+8/zWYPzu5XFz/LzlhZxH8L3T9xTHtY6DfG56n/W6tMf8/G3M8fNU/DwV
P0/Fz1Px81T8PBU/T8XPU/HzVPw8FT9Pxc9T8fNU/DwVP0/Fz1Px83FeHr/O
8zkv5DyC752+pziudRzkc9P7rNelPcIe8QvjF8YvjF8YvzB+YfzC+IXxC+MX
xi+M3zyPJRi/eX5rMH736iz4dd7WeT7nhZxH8L3T9xTHtY6DfG56n/W6tEfY
I35h/ML4hfEL4xfGL4xfGL8wfmH8wvjN81mC8ZvntQbjd69uhl/n4Z23dZ7P
eSHnEXzv9D3Fca3jIJ+b3me9Lu0R9ohfGL8wfmH8wviF8QvjF8YvjF8Yv3k+
SzB+8/zWYPzu1UHx67qK8/DO2zrP57yQ8wi+d/qe4rjWcZDPTe+zXpf2CHvE
L4xfGL8wfmH8wviF8QvjF8Zvns8SjN88vzUYv3t1bfy6Tua6ivPwzts6z+e8
kPMIvnf6nuK41nGQz03vs16X9gh7xC+MXxi/MH5h/ML4hfEL4zfPZwnGb57f
GozfvT4F/Lru6TqZ6yrOwztv6zyf80LOI/je6XuK41rHQT43vc96Xdoj7BG/
MH5h/ML4hfEL4xfGb57PEozfPL81GL97fSf4dR3bdU/XyVxXcR7eeVvn+ZwX
ch7B907fUxzXOg7yuel91uvSHmGP+IXxC+MXxi+MXxi/eT5LMH7z/NZg/O71
EeHXfQmuY7vu6TqZ6yrOwztv6zyf80LOI/je6XuK41rHQT43vc96Xdoj7BG/
MH5h/ML4hfGb57ME4zfPbw3G715fGH7dZ+K+BNexXfd0ncx1Fefhnbd1ns95
IecRfO/0PcVxreMgn5veZ70u7RH2iF8YvzB+Yfzm+SzB+M3zW4Pxu9fnh1/3
DbnPxH0JrmO77uk6mesqzsM7b+s8n/NCziP43ul7iuNax0E+N73Pel3aI+wR
vzB+Yfzm+SzB+M3zW4Pxu9e3iV/3gblvyH0m7ktwHdt1T9fJXFdxHt55W+f5
nBdyHsH3Tt9THNc6DvK56X3W69IeYY/4hfGb57ME4zfPbw3G714fLn7d1+c+
MPcNuc/EfQmuY7vu6TqZ6yrOwztv6zyf80LOI/je6XuK41rHQT43vc96Xdoj
7BG/eT5LMH7z/NZg/O71VePXfZru63MfmPuG3GfivgTXsV33dJ3MdRXn4Z23
dZ7PeSHnEXzv9D3Fca3jIJ+b3me9Lu0R9ohfGL95fmswfvf65HN9Yeu7dZ+m
+/rcB+a+IfeZuC/BdWzXPV0nc13FeXjnbZ3nc17IeQTfO31PcVzrOMjnpvdZ
r0t7zPPZxlxfWMJv/p3DuXj73QN+3Uftvlv3abqvz31g7htyn4n7ElzHdt3T
dTLXVZyHd97WeT7nhZxH8L3T9xTHtY6DfG56n/W6tEfYI37z71bOxdvvWHL9
aOuLdx+1+27dp+m+PveBuW/IfSbuS3Ad23VP18lcV3Ee3nlb5/mcF3IewfdO
31Mc1zoO8rnpfdbr0h7z/LYRv3u/S8Jv5u13D/jNr2991e7Ddd+m+/zcF+Y+
IveduE/BdW3XQV03c53FeXnncZ33c57IeQXfQ31vcZzruMjnqPddr1N79fgf
9/rcEw==
      "]], {}}, 
   {Thickness[0.005], {
     TagBox[ConicHullRegionBox[{{0, -5}, {1, -5}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, -4}, {1, -4}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, -3}, {1, -3}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, -2}, {1, -2}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, -1}, {1, -1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 0}, {1, 0}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 1}, {1, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 2}, {1, 2}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 3}, {1, 3}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 4}, {1, 4}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 5}, {1, 5}}],
      "InfiniteLine"]}, {
     TagBox[ConicHullRegionBox[{{-5, 0}, {-5, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{-4, 0}, {-4, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{-3, 0}, {-3, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{-2, 0}, {-2, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{-1, 0}, {-1, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 0}, {0, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{1, 0}, {1, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{2, 0}, {2, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{3, 0}, {3, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{4, 0}, {4, 1}}],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{5, 0}, {5, 1}}],
      "InfiniteLine"]}}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "GridLinesInFront" -> True, "ScalingFunctions" -> None, 
    "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->2,
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.942165150769251*^9, 3.9421651617906647`*^9}, 
   3.942165258894002*^9, {3.942165393776167*^9, 3.942165449081972*^9}, {
   3.942165481860466*^9, 3.942165534412956*^9}, 3.942165616032921*^9, {
   3.942168060144494*^9, 3.942168082253479*^9}},
 CellLabel->
  "Out[2942]=",ExpressionUUID->"f0451e37-45fb-4648-8e2b-245a32bc9304"]
}, Open  ]],

Cell["\<\
We can clearly see a double pole at the lattice points (since the colors \
appear twice in clockwise order) and a double zero in the center of the \
fundamental domain (again, colors appear twice, but now in counterclockwise \
order).\
\>", "Text",
 CellChangeTimes->{{3.942165623311097*^9, 
  3.942165681908749*^9}},ExpressionUUID->"feba63a4-6721-401b-8d0c-\
897790654d37"],

Cell["And here\[CloseCurlyQuote]s the Weierstrass function for the 60\.ba \
rhombus:", "Text",
 CellChangeTimes->{{3.942165700070073*^9, 3.942165709075327*^9}, {
  3.942165772213583*^9, 
  3.942165777928428*^9}},ExpressionUUID->"124dbfc8-24c9-48e4-87e3-\
faf57945893d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g2", ",", "g3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g2", ",", "g3"}], "}"}], "=", 
     RowBox[{"N", "[", 
      RowBox[{"WeierstrassInvariants", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox[
          SuperscriptBox["E", 
           RowBox[{"I", " ", 
            RowBox[{"\[Pi]", "/", "3"}]}]], "2"]}], "}"}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ComplexPlot", "[", 
       RowBox[{
        RowBox[{"WeierstrassP", "[", 
         RowBox[{"z", ",", 
          RowBox[{"{", 
           RowBox[{"g2", ",", "g3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"2", "I"}]}], ",", 
          RowBox[{"2", "+", 
           RowBox[{"2", "I"}]}]}], "}"}], ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".005", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 FractionBox[
                  SqrtBox["3"], "2"], "n"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 FractionBox[
                  SqrtBox["3"], "2"], "n"}]}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "2"}], "+", "n"}], ",", 
                FractionBox[
                 SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"PlotRange", "->", "2"}], ",", 
      RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.942148147644608*^9, {3.942148250991031*^9, 3.942148255015229*^9}, 
   3.942165157101314*^9, {3.942165240099424*^9, 3.942165247667341*^9}, {
   3.942165480136485*^9, 3.942165532928282*^9}, {3.942165608798459*^9, 
   3.942165614665683*^9}, {3.942168052578294*^9, 3.9421681647572308`*^9}},
 CellLabel->
  "In[2947]:=",ExpressionUUID->"b7ffef5d-25b7-44e4-bba3-b12c5e9dc251"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx12y+o3mUYh/GDGkyCdUXEalwxDJ9kVNFinWAwKWPt1BlXDEarxTCjIDgX
DFoEwaBDBBFEREQGIiJ4zt7nc4sX/FYeLnbYe3Yunj/3977P06+/9cobj5yd
nd169Ozsct1/7lpv37n/9eNf/vMpvnL94w+efO/v4Qs4v3L9r+Gr92689Myz
fw5/9hAfDL94QVfv/TH83cW/fu3278NfXeKdX4d/efPWT++/8PPwY5d/ff/H
4Wuv/XbxFd8P33j4DX7z3+ddfrvnXwy/fX75BR8Nf3Li5/HN09cPv3P694Zf
Pn3e8BOn72f4wen7Hf729P8Z/uH0/x1+9fTzGP789PMafu708xz+8PTzHn7q
5GP43ZOv4b2u8Hjtyi/mF/OL+cX8Yn4xv5hfzC/mF/M7n7f9Yn4xv5hfzC/m
F/OL+cX8Yn4xv5hfzC/mF/OL+c2+XEf7tF678ov5xfxifjG/mF/ML+YX84v5
nc/bfjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfzmnF1H5273ab125Rfz
i/nF/GJ+Mb+YX8wv5nc+b/vF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfz
m3tzHd2jPXe7T+u1K7+YX8wv5hfzi/nF/GJ+5/O2X8wv5hfzi/nF/GJ+Mb+Y
X8wv5hfzi/nF/GJ+Mb95B62jd1Hv0Z673af12pVfzC/mF/OL+cX8Yn7n87Zf
zC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv3nXrqN3bt9FvUd77naf1mtX
fjG/mF/ML+YX8zufs/1ifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5TZ2y
juqWvnP7Luo92nO3+7Reu/KL+cX8Yn4xv/N52y/mF/OL+cX8Yn4xv5hfzC/m
F/OL+cX8Yn4xv5jf1J3rqA5t3dJ3bt9FvUd77naf1mtXfjG/mF/M73ze9ov5
xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+Y3OcI6yhVah7Zu6Tu376Leoz13
u0/rtSu/mF/M73ze9ov5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+Y3udA6
yomaK7QObd3Sd27fRb1He+52n9ZrV34xv/N52y/mF/OL+cX8Yn4xv5hfzC/m
F/OL+cX8Yn4xv5jf5HzrKPdrTtRcoXVo65a+c/su6j3ac7f7tF678juft/1i
fjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5TW67jnLc5n7NiZortA5t3dJ3
bt9FvUd77naf1mtXfjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfwmh19H
uXxz3OZ+zYmaK7QObd3Sd27fRb1He+52n9Zr16mPNk99tHnqo81TH22e+mjz
1Eebpz7aPPXR5qmPNk99tHnqo81TH22e+mjz1Eebpz7aPPXR//luc/jmts35
mgs1R2jd2Tql79q+g3pv9pztvqxH3JVfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL
+cX8pk+2jvpm7bPw29y2OV9zoeYIrTtbp/Rd23dQ782es92X9Yi78ov5xfxi
fjG/mF/ML+YX84v5xfxifjG/6Xuuoz5o+2b8Nodvbtucr7lQc4TWna1T+q7t
O6j3Zs/Z7st6xF35xfxifjG/mF/ML+YX84v5xfxifjG/6WOvo752+6D8tq/S
HL65bXO+5kLNEVp3tk7pu7bvoN6bPWe7L+sRd+UX84v5xfxifjG/mF/ML+YX
84v5zVzCOppTaF+b3/bJ2ldpDt/ctjlfc6HmCK07W6f0Xdt3UO/NnrPdl/WI
u/KL+cX8Yn4xv5hfzC/mF/OL+c2cyTqaO+mcAr/te7ZP1r5Kc/jmts35mgs1
R2jd2Tql79q+g3pv9pztvqxH3JVfzC/mF/OL+cX8Yn4xv5jfzA2tozmizp3w
2z52+57tk7Wv0hy+uW1zvuZCzRFad7ZO6bu276Demz1nuy/rEXflF/OL+cX8
Yn4xv5hfzG/mwNbRXFjniPjtXEL72O17tk/Wvkpz+Oa2zfmaCzVHaN3ZOqXv
2r6Dem/2nO2+rEfclV/ML+YX84v5xfxifjPXt47m/Pjt3FDnTDqX0D52+57t
k7Wv0hy+uW1zvuZCzRFad7ZO6bu276Demz1nuy/rEXflF/OL+cX8Yn4xv5nT
XEdzm/x2DqxzQ50z6VxC+9jte7ZP1r5Kc/jmts35mgs1R2jd2Tql79q+g3pv
9pztvqxH3JVfzC/mF/OL+c3c7Tqaw+W3c32dA+vcUOdMOpfQPnb7nu2Tta/S
HL65bXO+5kLNEVp3tk7pu7bvoN6bPWe7L+sRd+UX84v5xfxmjnodzVXz2znN
zvV1DqxzQ50z6VxC+9jte7ZP1r5Kc/jmts35mgs1R2jd2Tql79q+g3pv9pzt
vqxH3JVfzC/mN3Px62hOnt/O3XZOs3N9nQPr3FDnTDqX0D52+57tk7Wv0hy+
uW1zvuZCzRFad7ZO6bu276Demz1nuy/rEXflF/Ob33NYR7/3wG/nqDt32znN
zvV1DqxzQ50z6VxC+9jte7ZP1r5Kc/jmts35mgs1R2jd2Tql79q+g3pv9pzt
vqxH3JXf/N7KOvo9Fn47F9856s7ddk6zc32dA+vcUOdMOpfQPnb7nu2Tta/S
HL65bXO+5kLNEVp3tk7pu7bvoN6bPWe7L+sRd+X36PeS+MX8Yn5x56o7h9u5
zc75dS6sc0SdO+mcQvva7YO2b9Y+S3P55rjN/ZoTNVdoHdq6pe/cvot6j/bc
7T6t167/AmEkh+0=
     "], {
      {Opacity[1.], Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
R4jf2/Ff33X6smfRRzV8QdNpYmhXMnQKmXqZLMMEtgncNHx5ts4CZ0txqDmY
YiotMpLXGiif6qu69NTvdZQj+rJJY2DJUoh05JC9aKwwJDd3iv94UjQzI9pd
YoMr6IP1CfV2J4gtYxOjiTvey7v2nylmvVSDZ/SHDQzt8n2dfKZeGsswjm0K
P1zePDsHoYelJNIMzDCRlhrJGwyUz/TUPboHH3QUnw2kMyaSVWsB2plN8dll
R2/yiscFLydFK3NCxgpdtrZ1sD6sQraJcXn7pDAM2WN+z3aIYtpN03tK165l
PCzd181l6qewjGI4ZnARwh7aCX0tJLFmULaxrMJQ0WSgfK6nfqOr/qirGDOE
5szE67Z8nCuL7k/kJK7wKieE/ePi7TkBb3VXsb6i3uhXopoF+DQaKRhBdp3a
sx6gGnfSdB/TtasZD4v3dbOZBkls40iOeQDPxo3vYC0KNAcSTaE8Y1m1oaJF
X/VST/1OVzWkJx83AhfMRVv2PKIHkxmI5aQv8OsnhaOTYhwc1q5MQWN+pW0f
7A9LmE1UZvY6M3yU6fGaafeUaVXLsihhmeewzFLZ5nEci3CuFazlybd3FLhY
iQIsJTEWYJo5lG8mqzCTPzJXtlmoXlmp+20PxpyUC74yRDSwlyviP2IA/QTZ
OknOoQIqOu0rfVXJfCdk1uwwU5eYwUNM1y6m7WOmVTXLoohllsU2S2abx3As
QrlWfjxbd76DvcDdShRsKYkzBzPMpUVmsiozRZO5st1S1WOtHrRTT7golgOk
6HgJrUgoaqGCIyQZdlcupIkO6OSvjHk5s5PHLMMxE2aZ/gNM5xdMm0aWZQXL
vIBllsE2S2SbR3EsQ7jWPjw7V76jrdDLShxmASSaQ9lm0hIzea2Z4rG58oWl
qtfmYNheNeUuXwuG8MkSZjlX/GIXGifJyXsykMb9SsMe7k9AzFYWswDJjJlg
+rxjOjxjWjewLMpY5nkss3S2WQLHPJJjGcS1hovQme9kLfS1FEdaAMnmUK6Z
tMxMXm+ueGKhfGmlfmd78MlBNesl2wwHSRliTg1L0kOUzpLkdDgs6PBQCnyX
kpXQDFvSiRCVjwlSe/gRj3n+FVyPPK5LKtcxnmsfwbUL5tn58ew8eQ4ufEd7
gYu10Ae20UoSZQUkWoPpNlCerbTUQVbrIn/ipewMVH2IOZjJ+oqqU9PfqoBF
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
tqRwWDUkei1lsZz+up5W3kj16afazVMMMXv3KMRb+8hb3NWbwtkb4JimYlBT
3XNT8VhLWqgniTTm21pyTL2ZOtGMO5nU66W7Gk2kGx342+8w9z8jdRY2jZHL
zjvTIYyRVOG7clnPC/mzIUXbOr+OvFNNnaqidzTQ8tuonsMU62WKHmHvDhV/
i7l9k7d8QzytCX3WVA5oqjpvKxoeQNn6oiATnrUd2ziAqR1Pv5VLuV5J1mgh
3ezC3+nHaH1B6C1vmGIX3XcnI1lDmeK3tfJX3Yr2L9InCE79LqaC9qmW9qSB
mtpJdR2jWGzs6ZB3b9Gwt9ibN/mLNySTmtIRTVWfpur5XXn1QzDVUOhlyrV0
ZhuE7Gsl024UUK7XkDVbibe6cXcH0dqT2/pra1b4eR/KeCxnIBfsbZJ3vlW0
TwNNWGb93mYxvb+O1tBAjeylOk1RTBB7D3Z3bjHQtzjrNwXzN4BxTdmQpvqt
prL1nqxMB4g3Ejibcc3dWXoRjHtpNI3iPY36nRvthFtvsPeGUQ9ntgy3Vu2I
swG00UReX6H0Tav8xYDi2aIIDisdQ84iziTsdubslheSI+rIZm/IOuPk2+vk
q6Sd8xT0xf2NS9zFS+KJy7KhK+puDXmtFhBvwLO2YBsEMO6kUC6X7lx5jL/W
jdYYRNyc3Li7uqyDmbUmjXnSB0J5nUnQs3JpU5usuh8sW2BlYbGZpLGk3Wd5
uwVFZP/HZJP3ZO1p8s1t8uUd4nkq6iJr7RJ//rLky2X5h6uqjpuyMm1xmCHP
wp6lG0q/mbl3uZJ0pRV37Q1ac3j71sz6vY0lA+y0HfmTz35fpKAjXdpWI2t4
IaseFhevMrJxW+k7H9N2m/N3M4rJLs/Ihh/JWvNkTfTOJTL+Ah1xkb1ySTB7
GRy9onx/Vdl6W5qvI/I15pq6MrWjaRq5u5friFefY6+/Q934vHV7fu3+9oIJ
ftJpb9if1RsjepEjfdogq30lrxoT5G1Ts/HLKeS3mbt1heTEMrJlJ1n/E/nu
Mvk6bufCHvYCY+sSZ/mScPoyNHJF/faaoukumK4ncDLhGHvv34+nXi0kX2kk
XH2Jud6PvPFl887S6gPUnAVx3JX6MYjTEw88L5K2PJZVvZFVTnPhsCK2CTGY
yVBCZzSxPIUUl0l0qCZpdZJuDpOuzJPOIUgnSfhfKYhTzNUz/Olz0NAF1QsN
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
Ao4ppLjfKSTbYwrJWd7ooWj3U/VGqEdTD9fKD8kdasGEUoUBDnnSwwMZ9F1G
VUELXOA1WlQ1Lsh4zY9q4QVUcj3zuK5pXKd4rkPkPzGuI0jBle/oAIf172CL
3THY4iQ+Alu8gKwAsCRS+ihV3lmm/Nx+sDX6jYn5Lud//676/v0f3xSHh0yR
apMo/zgNPemRlDSIUwuEUSnC4GiBb4jA05/v7sV3PSaDnP+dDPo3CslZEucm
SfUGcoOg8hhpc6bidbVqousQM/2NR/quEn//fvj92z++QaoDKk+5hJK9GwUb
OyT5NaKkXGFEkiAwUuATLPD047v9QQY5/y8y6N8oJEdxlIskwQNI8wXzQ6Cq
eNnTXEVfg3ru7SFp6buI+v0A+vb9K6z2VSw/IO0rpjek3R+B2jZxToUoPksY
Fi8IiBB4B/I9fPluf5BBzg5852My6HcKyfvfKaRETyDDHywMl9YmyZ4XKgdb
1CuDXymb30HW96+Kb/844qu+8iA1hqIYW4Se9wEVj8UZJaLYdGFIrMA/TOAV
wHf3PsK4XP4d4/r/JYO8/QX+ocLQGFFsqjizCKhskr54q/iyoMbufeWD/w9p
7/0VVdL26/8F53vOM+EJM2NWFBNgQnKWnHOGJuccJQkikoMgQZIgAioigoqK
kjN0jjSxm4Ymdu/uJqkz77dqd6M4M++7zlpnrflhgk7Ru6ruuj9tXftCQa4/
wKB/8Je+zEzuDbZtPy8VVaQKssORZB9+tCsvxH7TX0whmUKIxsHoAIWE0jrg
B4Bj2a3ZOa45ua25e6/7BG+ExvIS7yB5ZcKG1p2esU9T7N95W+ABgqXxX5+E
v6/Pf6YN7XY/2W4qFN5PEtwN4Sd68SKdN4Pt/oZCgmTQQQrJehVSSM5rzph1
jO+6X+hGxE1eShZyr1r09PXuEP7zPPd34S6kkMB4O7zfuVOfCN27b+u36nOE
RfFIeiA/3oMX7rQZaLvpY7nhYbbuarLuZLz+HYW0TwZZ26zZ2q85uKy5eKx7
+m8ERGxGJ/PT8wXl9Vsvu3YnaZ85G2CpQwrp970/RGtfWORP45077VWimgxh
XjSS6s+PdeeFOaAUksVfKSSwxcBGWzWzQjedM9cUwzXz5VoEc22iVhwSV9wz
VgOK1+MaNnPe8hsJwsHlrbndLbCRP38WfF7d3aHsrX74PFX7efju3qvonUa/
7QpXUYGd8K4lSiEZSygkb4MNV4M1O0NQOiAZZGotJoO4pigZZBmyYhuz4pS8
6pG1Fly2nviEV9SNPKeJJta3lj5tbf8h/LIr+rS0K8J/Wnr9hVr+qT9try1i
p957q8xZlGcrvGMhSDKFFFKYIaSQPFEKyQalkCAZZPONDDIP4FqFrdjFrTin
rnrnroVXbqS28soGBK+nRURka+3L1i4YS7T1aWEPGfvEev6FcO/Tx+Td5yHb
tZ5bJU6iHBvhbXNBogk4MiCF5AfxUlDeQZE/QAY5oWSQN9cikGsdsWJ/c8U1
fdW3cC2qdiOjg18zJvjA2mJsbfF+3/r0u+Azf2ePubfZ/3m28fNE3t67+N0n
gdtV7ltFDsIsqz9TSO4G4NiCk2VhCA6yFSN7roEbONqW9IKWdCM5ejc5Bmkc
4xyOeSnHsYHj/4aTPL5UNs/p5LNJn1ncL/Nbount+Tlhzyr/EX8xR0iN3R71
3vtg/6nNYvexyT6FpCtM00XiQV+tC47jdUcDcDSLySAuJIN8l3RDlnSjOXqJ
HIN0jkk+x6KC4/KEE9LFSccv1XA4PUI24wt7/fPcNn96i8ESvNvYrEQWMkTE
iJ0hj0/vbPdazXcfGe88MNgq0gOtC6SQYnV5wXqbnvqg2QAtx4qJmAzygGSQ
LkoG6SdzDO9yTIs41tUczHNOZC8nm7L0eHVxeJs994XN35vdXmNu4TmC9s21
UmQmdQsXvNvv+umN9d4zs906o+0ylELK2KeQAvU23PVBEwVaqRVjW66hy7K+
FySDdMM5evEc/VscoyyOWTHHro7j/ZITN7RUyFxq3Vyc3GUvflkQ7k5vLzFF
Q8vIMx63SMBI2Jrw3+tx+tRhuddsulNjuH1fH1JI6SiFFKG76ae34QKbw1Vz
A9AognZxSduHoxG6qBbLVkmBZJBK0bxW1azBkxmrt0zMGCNihly4gnu2NTm0
N8bcHVhf7+KRujfax1bzp5ajlxY81ih2vDFTYY/edqfm3gvVvceq3yikBG1e
8I0NFz3Q+q4Y2i7ruqFkUDhbNZ6tnMpSyl5QLZnTrp01ej5t+2HKG0ePXyCV
rU+27UxMfBqf3x7cWO7enPiw3ohdzZxdDl2edVsn2vBHjEUfb+y81oAU0iPV
nQq1rQINYbomEqvN878BmnnQ0oPGHrT3KBkUyVZNYCnfXlDKnVcrm7vxaMa0
bdqxd8qfREtdJNbwJjr3xgmfRjnC/s35ns3B7rUHxJVU1pI/l+mygbNEBg23
unR2O9T3nu5TSLkawlQtJEpn01sXhJQVE3MQWJZ0vDiawYtq0WyVJJbynQXl
/HmNilm9xhnzV0yXIUYwnZq1hG8QTHbvjVI/Da0gvZtTPRsfBtdKqNwEzqL3
Kt1xc9Jc0K+/9U5r76XaXrPqbo3adom6KEtDkKzFD9PZwOiCyQIRjKtvs6Tl
sagSwroev3Albe5S7szVMqbCI7raC6rOB5LJBNaZORzF6c7idT7c7ni324YX
NLIW65dG6pee1C+mvGX7TLKsZ+d1FqmaKxOqGwOKSNf1rY5rey1Xduvkt0uU
RBlqSLQWCJUgWnL1HJY0vReVw1nyCZAMulwwfe0BJIPU2ym6vURz/KTHzFD8
8od8wZumnZfduy8ovCb2bPVyz6Olh42LUd1sDGHBfH5Gm0PSWB1T2exTFLyT
326/CimkmuvbRcrCNHUQk0FYXjE2BcGZo+7HVopiQTLo7uyVe9Py1VPKT2ia
r8kGAwQr8rjf3EDy6rti0ZvnOy8Gdlqm1hsXabXLbx9xyp4vhg2wXKgLxgtM
7SWC+tqIMq9HQdiJUkhNV3cqFbbyVARJGiD+r9norRhaLuu4cdQC2YoxC1dv
Scig6w8ZKi1U7XdkoxG8LX00hNWbvt5Zsf2qY6dtbKt5bqWBg6tbbnvEye1g
B46w7Kfm9Vl0LS5ObX1Iif/xuuj1NUghNVzbKVfcylIVxGtu+ujAvGyiu3zD
nqPiz7oaO3fh9vTFIoZsNfVyM1n+FV6pb0ITN2TO+IhhvYpYa74taniw9eDF
dsXwes7UTPZsz935uvz5tJI5h9ZZo/5ZdfLM1VmaHBsnxx2W3eiRgRRSq8ze
o0vb964Lk1U3vbRWjIyWtVwWlYIXLt+cu3B3+mIJQ/Yh9coz0vVOnMrguBZp
wJrZ5bP4MmajOUtU/3Cr4pWobGIlj0nNnHubPf8gfy6+cs6mY1Z/eEaFPn15
jiLHmZRbGdynkFpkdmsvb+UpCuLUN1x0VgzMljQwbIWwBbmk2QvZTJkyutwj
ytVWosJ7rOrImB6l32HmXcBS601+U8HWw8fbD94LigmcvGlc+nxb7nxxwVxI
/Zzl29kbEzOKzGm5BZLc0riEQhKJKaTKq1uZSvwIjTXbG1w9a46aN0s+al7m
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
VzKbH2RWBmU4k7LzFDnGtNzojNLrWd3qWav8uajs+dI7cx25TGIJdrmiU1hX
v9WUK3oRx3vvx+m3mxm7QcGqDhOvv6dcaaXL1TMvls5eyFqQS2QrSvxEGxht
QYLadqHCXv2l7VYZ5I3MRrcMd1h2ESc7S5OjzFwZmFFtmzUonbPLm0u+O1+d
OduVM8UoG10tf7n9qHqrKUPUHrX+wYs9aDU1rknEKQ+Q5N9QLz9jyNZOXyye
O5+xcDl+UTlQ4ify0xKmquzcl99rlN1qk+G/lYEU0qgsiyA3w5AjzFzrmdV4
OmuSP+uYN5+RPt+QMzsAJuvRwvKLSWHH6503VdvdGZsj4Wys4xTJeJyq3UVX
bWUq1M9cLZu7lLtwJY2lELeoGryk/dVPpAP9RLkqOw8U9hqv7ry4KuxEKaQR
pWW82sKUFm3ecJDl2MoOrufcq11+1cAhPZlefTG8/aptp/P+dl/q2mjgAt6a
RjYcpmq9ZSg/Y16vnblSMn8pa+FqClsxmqMWAP1ERmI/kbbwlvp2ofJu9fW9
JyiF9E5+s1dhdUyZQ1Kfn9YiLpj0sNyaF8PrOZWVy12PF6ee0zZae3dfP915
VygcSFwZ954jWJDIev00jVdTSs3T8lWzl4tQMiiJrRTJ0fBd1j3gJ0pX2y5W
2n0oDymkDtRP1K+4MqGySNGYndPGLli+Z4MAFFu/1FC7NPCYvfCCyH/Ztfvm
0faHHGQoZmnSfZpoiqPc6KGrvZxSfDx9rWL2cv785XSW/M1F5bAlTS+Jn8hT
B4nVFGWCCqy49wilkF5f43+8DikkrCqbpsmc1x1l2b5i+9UtZtQttdRzxsFk
9a3xRul7E317uCYhOZfLCGUyXUenLTtn9ZvnNKsWlAtZSnfZKimLarESMuiA
n4gfqSO8hVJIpeq7D1X3noopJG1kwGADZ7Ey5cjm+JC4yT1rpd0bPb2bM8PL
glHSp4n3e/g6hHKHwwikMZ0GZsw6ZnUfz6tXLCjls5TusFWSFtWiOZpByzqe
XAPoJ1qz09/0u4HEaAtva27la+xUfKWQ1EUfdfjDRusEq+UZl7mlQNxKetda
zcfNkf4N9ihLNI79NN6xS3ywSUtiTfkQp+17ZoxfzOnUz6uVLijlsJRvs1US
FtUjl7QCoJ/IEPUTOenxAm8I4rVFGZrbReo7lWp7j1X3XqAUUo8ub9R4jWyz
NO/OXA4fW83+sN7StYnrX18Zm9mZGNmbfL5NKl6jR89PeUxOW3fNGrbMadXO
qxSzlLLYyqls1XiOetiStt+yLliE1qifCJRE1E+UhVJINWp7TaoohaQl6NPb
nDBbpdlz2B40buzQauHHjc6Pm1QwWbOibRbnCwv3idPO4xTPchJGF31fcewf
cczuc4xyOPppHL2bS7qR38ggI7tvfqIAPSRKV5CkK8rQRSkk/d2HhntPTT+9
sdztc97CBiLTSZur9zjIc4ZonLnNXUB22Qtf2GM7nCfrnDwGJ3pg0bONY1PL
MSnmGGbCC7HfyCAvruGf/ESQQhKm6EIKqUgPUkiPjPaem316Z70z6C4ihPLn
0jY2yliC11NblNntDdbGJ9b0l8X+Lc7DFU4GaTGse9HtGceyimNcyDHI4Ogl
75NB/sv6Hn/2E4XCa8nCNF1IIRXr7VQa7D42/tRmvtdltz3iKaRE8dmZa7ya
OWEXc2t6bkuwsPKFRfm82CXgPGBzbmEXA99xnJo45uUcozx4dVkvcUk3ekk3
ZFnPFyWDHFZMLaHvxll/0xf1EyXoCtN1IYV0X2+nxnCv2eRTh8Vut8PWuK+A
HsdbyuPyG6eFfcxtFpgs4ecvIv4fW8wdQQ+HX4fdyHyzFl2/6ndvxS1jxT6B
ax3JtQiCN+pNv5JB+34ix30KKVRMIZkIb5uLcqy3Shy2azG7LUGfPiR8weV/
Wniyyx/a2psRfBaI9n4Xrf8uoggFb+d5D0Y2br9ci6hZ9S5YcbnNtYvnWoVz
zVEyyPQrGWQJySDUTwQppICvFJKp8I6FKM9mq9Rpp95zty30U2/KF3LJJ07b
rnBC9ImNfNkWbf8h4n4WYXnIyylecd96cstayIMVz9wVp1tc21iuZRjXXEwG
uaEX7G1Wzcyhn8gW9RN5f6WQjFEKyVJUYLtd4bLz2GevI/LzUPpneuXeSufu
NlHweVn4eU8k+mOLtSccWeU/IW/mda3HN60Glq5gMlcck7k2+2SQqZgMEvuJ
zFYtjdbtUT8RpJAM+ZFGKIVkJsy02iqy365y223233sb+3ks6/N0/d56984u
Dfm8ASbrj//6rz92v3xZ5u3hp7Ze9QgeNPLvFG3G3NoIjFr3DFhz8Vxz2CeD
rFAyyHIfbJFQSMaQQvIwQykkG16EIz8eg9wOEBbGbNVl7ryp/YR7//sS9Y/t
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

           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroupBox[
        TagBox[PolygonBox[CompressedData["
1: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
Py0=
          "]],
         Annotation[#, 
          "Charting`Private`Tag$216431550#1"]& ]]}, {}, {}, {}, {}},
     VertexTextureCoordinates->CompressedData["
1:eJx1mz2oXEUUgB/aBK3SBhuxtRQ7SSdoI1rZxp/CSrANsUorWEUrwSpg5ZRJ
N0EsJiAMgUEGCf7/Xi/Pytb3Fr9zOd/utRm+7O59O37MzJlzzj771vtvvPvE
2dnZ7SfPzi5H//fpzWs37t39/HrmEvzOvbtX79y8r9dr8IeXePVrvb8Fv/rm
+t7tX77R53vw0w9f+ujL7x7peSP4n4tPf/byt3r+DB5XDg8IfuXw9x4HP350
+Ybvgz85/P0fgl9/7vl/X3jwY/BTh8f9FPzVB69dvOPn4FuH7/dr8IsPLt/w
W/D54fv+HvzFxbe9duOP4LcP3//P4GcuH3fnL81nCf744n/OlYd/a35r8P9/
Vbx5PT2WYPzm12swfvP7WzB+8+d7MH7z80YwfvPzZzB+YfzC+IXxC+MXxi+M
Xxi/MH5h/ML4hfEL4zfPZwnGb57fGozfvXV62us2Zr/8ew3Ofov8Fvnl8z04
+y3yW+S3yG+R3yK/RX6L/Bb5LfJb5LfIb5HfIr9Ffov8Fvkt8lvkt8hvkd/j
fff0Ot28esQvjN/8vhaM3/z5Hozf/LwRjN/8/BmMXxi/MH5h/ML4hfEL4xfG
L4xfGL8wfmH8wvjN81mC8Zvntwbjd+8cPb3vliOP+fVtzOu3hl84r98afuG8
fqvWb9X6reEXzuu3av1Wrd+q9Vu1fqvWb9X6rVq/Veu3av1Wrd+q9Vu1fqvW
b9X6rVq/Vev3OC46fY6Wo3Vpj7BH/ML4zZ/vwfjNzxnB+M3Pn8H4hfEL4xfG
L4xfGL8wfmH8wviF8QvjF8YvjN88nyUYv3l+azB+9+Lc03HRdo563/U6tVeP
eX9u4RfO+3MLv3Den1v4hfP+3LQ/N+3PTftz0/7ctD837c9N+3PT/ty0Pzft
z037c9P+3LQ/N+3PTftz0/58fG85HeeWo3PT+6zXpT3CHvEL4zc/bwTjNz9/
BuMXxi+MXxi/MH5h/ML4hfEL4xfGL4xfGL8wfvN8lmD85vmtwfjdu4eevrcU
rbP7er0e7bNel/aYP7+N+fzt4RfO528Pv3A+f7vO367zt+v87Tp/u87frvO3
6/ztOn+7zt+u87fr/O06f7vO367zt+v87Tp/j/MK+PU9xXGt4yCfm95nvS7t
EfaIXxi/+fkzGL8wfmH8wviF8QvjF8YvjF8YvzB+YfzC+IXxm+ezBOM3z28N
xu9enijHV9u90/cUx7WOg3xuep/1urTH/LxtzPHVCL9wjq+G4quh+GoovhqK
r4biq6H4aii+GoqvhuKrofhqKL4aiq+G4quh+GoovhqKr47zfvh1HsH3Tt9T
HNc6DvK56X3W69IeYY/4hfEL4xfGL4xfGL8wfmH8wviF8QvjF8YvjF8Yv3k+
SzB+8/zWYPzu5XFz/LzlhZxH8L3T9xTHtY6DfG56n/W6tMf8/G3M8fNU/DwV
P0/Fz1Px81T8PBU/T8XPU/HzVPw8FT9Pxc9T8fNU/DwVP0/Fz1Px83FeHr/O
8zkv5DyC752+pziudRzkc9P7rNelPcIe8QvjF8YvjF8YvzB+YfzC+IXxC+MX
xi+M3zyPJRi/eX5rMH736iz4dd7WeT7nhZxH8L3T9xTHtY6DfG56n/W6tEfY
I35h/ML4hfEL4xfGL4xfGL8wfmH8wvjN81mC8ZvntQbjd69uhl/n4Z23dZ7P
eSHnEXzv9D3Fca3jIJ+b3me9Lu0R9ohfGL8wfmH8wviF8QvjF8YvjF8Yv3k+
SzB+8/zWYPzu1UHx67qK8/DO2zrP57yQ8wi+d/qe4rjWcZDPTe+zXpf2CHvE
L4xfGL8wfmH8wviF8QvjF8Zvns8SjN88vzUYv3t1bfy6Tua6ivPwzts6z+e8
kPMIvnf6nuK41nGQz03vs16X9gh7xC+MXxi/MH5h/ML4hfEL4zfPZwnGb57f
GozfvT4F/Lru6TqZ6yrOwztv6zyf80LOI/je6XuK41rHQT43vc96Xdoj7BG/
MH5h/ML4hfEL4xfGb57PEozfPL81GL97fSf4dR3bdU/XyVxXcR7eeVvn+ZwX
ch7B907fUxzXOg7yuel91uvSHmGP+IXxC+MXxi+MXxi/eT5LMH7z/NZg/O71
EeHXfQmuY7vu6TqZ6yrOwztv6zyf80LOI/je6XuK41rHQT43vc96Xdoj7BG/
MH5h/ML4hfGb57ME4zfPbw3G715fGH7dZ+K+BNexXfd0ncx1Fefhnbd1ns95
IecRfO/0PcVxreMgn5veZ70u7RH2iF8YvzB+Yfzm+SzB+M3zW4Pxu9fnh1/3
DbnPxH0JrmO77uk6mesqzsM7b+s8n/NCziP43ul7iuNax0E+N73Pel3aI+wR
vzB+Yfzm+SzB+M3zW4Pxu9e3iV/3gblvyH0m7ktwHdt1T9fJXFdxHt55W+f5
nBdyHsH3Tt9THNc6DvK56X3W69IeYY/4hfGb57ME4zfPbw3G714fLn7d1+c+
MPcNuc/EfQmuY7vu6TqZ6yrOwztv6zyf80LOI/je6XuK41rHQT43vc96Xdoj
7BG/eT5LMH7z/NZg/O71VePXfZru63MfmPuG3GfivgTXsV33dJ3MdRXn4Z23
dZ7PeSHnEXzv9D3Fca3jIJ+b3me9Lu0R9ohfGL95fmswfvf65HN9Yeu7dZ+m
+/rcB+a+IfeZuC/BdWzXPV0nc13FeXjnbZ3nc17IeQTfO31PcVzrOMjnpvdZ
r0t7zPPZxlxfWMJv/p3DuXj73QN+3Uftvlv3abqvz31g7htyn4n7ElzHdt3T
dTLXVZyHd97WeT7nhZxH8L3T9xTHtY6DfG56n/W6tEfYI37z71bOxdvvWHL9
aOuLdx+1+27dp+m+PveBuW/IfSbuS3Ad23VP18lcV3Ee3nlb5/mcF3IewfdO
31Mc1zoO8rnpfdbr0h7z/LYRv3u/S8Jv5u13D/jNr2991e7Ddd+m+/zcF+Y+
IveduE/BdW3XQV03c53FeXnncZ33c57IeQXfQ31vcZzruMjnqPddr1N79fgf
9/rcEw==
      "]], {}}, 
   {Thickness[0.005], {
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, Rational[-5, 2] 3^Rational[1, 2]}, {
         1, Rational[-5, 2] 3^Rational[1, 2]}}, {{0, -4.330127018922193}, {
         1, -4.330127018922193}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, (-2) 3^Rational[1, 2]}, {1, (-2) 3^Rational[1, 2]}}, {{
         0, -3.4641016151377544`}, {1, -3.4641016151377544`}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, Rational[-3, 2] 3^Rational[1, 2]}, {
         1, Rational[-3, 2] 3^Rational[1, 2]}}, {{0, -2.598076211353316}, {
         1, -2.598076211353316}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, -3^Rational[1, 2]}, {1, -3^Rational[1, 2]}}, {{
         0, -1.7320508075688772`}, {1, -1.7320508075688772`}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, Rational[-1, 2] 3^Rational[1, 2]}, {
         1, Rational[-1, 2] 3^Rational[1, 2]}}, {{0, -0.8660254037844386}, {
         1, -0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[ConicHullRegionBox[{{0, 0}, {1, 0}}],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, Rational[1, 2] 3^Rational[1, 2]}, {
         1, Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0.8660254037844386}, {
         1, 0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, 3^Rational[1, 2]}, {1, 3^Rational[1, 2]}}, {{
         0, 1.7320508075688772`}, {1, 1.7320508075688772`}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, Rational[3, 2] 3^Rational[1, 2]}, {
         1, Rational[3, 2] 3^Rational[1, 2]}}, {{0, 2.598076211353316}, {
         1, 2.598076211353316}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, 2 3^Rational[1, 2]}, {1, 2 3^Rational[1, 2]}}, {{
         0, 3.4641016151377544`}, {1, 3.4641016151377544`}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, Rational[5, 2] 3^Rational[1, 2]}, {
         1, Rational[5, 2] 3^Rational[1, 2]}}, {{0, 4.330127018922193}, {
         1, 4.330127018922193}}]],
      "InfiniteLine"]}, {
     TagBox[
      ConicHullRegionBox[
       NCache[{{-5, 0}, {
         Rational[-9, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-5, 0}, {-4.5, 
         0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{-4, 0}, {
         Rational[-7, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-4, 0}, {-3.5, 
         0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{-3, 0}, {
         Rational[-5, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-3, 0}, {-2.5, 
         0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{-2, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-2, 0}, {-1.5, 
         0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{-1, 0}, {
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-1, 0}, {-0.5, 
         0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{0, 0}, {Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
         0, 0}, {0.5, 0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{1, 0}, {Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
         1, 0}, {1.5, 0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{2, 0}, {Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
         2, 0}, {2.5, 0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{3, 0}, {Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
         3, 0}, {3.5, 0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{4, 0}, {Rational[9, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
         4, 0}, {4.5, 0.8660254037844386}}]],
      "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[
       NCache[{{5, 0}, {Rational[11, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
         5, 0}, {5.5, 0.8660254037844386}}]],
      "InfiniteLine"]}}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "GridLinesInFront" -> True, "ScalingFunctions" -> None, 
    "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->2,
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.942168094975635*^9, 3.942168165880797*^9}},
 CellLabel->
  "Out[2947]=",ExpressionUUID->"1eeaa77e-e2bc-4a27-9af3-993d668ee8c1"]
}, Open  ]],

Cell["\<\
Notice that we still have the double pole, but the double zero has now split \
into two simple zeros.\
\>", "Text",
 CellChangeTimes->{{3.942165790613266*^9, 
  3.942165808592572*^9}},ExpressionUUID->"54942e70-88cf-4c7a-ab03-\
0cd82cb19bfa"],

Cell[TextData[{
 "To get a looping animation out of domain coloring plots of Weierstrass \
functions, one strategy is to find a periodic path in the space of lattices. \
We can do that using the ",
 ButtonBox["modular flow",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://golem.ph.utexas.edu/category/2014/04/the_modular_flow_on_the_\
space.html"], None},
  ButtonNote->
   "https://golem.ph.utexas.edu/category/2014/04/the_modular_flow_on_the_\
space.html"],
 ", which I ",
 ButtonBox["previously",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/groups/-/m/t/3061781"], None},
  ButtonNote->"https://community.wolfram.com/groups/-/m/t/3061781"],
 " used to produce ",
 ButtonBox["this animation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/shonkwiler/geometry-in-motion/blob/main/source/\
flow.nb"], None},
  ButtonNote->
   "https://github.com/shonkwiler/geometry-in-motion/blob/main/source/flow.\
nb"],
 "."
}], "Text",
 CellChangeTimes->{{3.942165899517888*^9, 3.942165949087199*^9}, {
  3.942166030857467*^9, 3.94216605348559*^9}, {3.9421660903949757`*^9, 
  3.942166104882496*^9}, {3.956848471042555*^9, 
  3.956848471042906*^9}},ExpressionUUID->"68c76ba3-2142-4afb-be16-\
ea8f173eb4ff"],

Cell[TextData[{
 "The idea is to let ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "99beacb3-3f35-4e6f-8ec2-2120c1494edc"],
 " be the lattice of points of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", GridBox[{
      {"x"},
      {"y"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "b12f1f3a-1b5d-4703-b36c-a6d8e061591d"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         SqrtBox["2"]}]},
       {"1", 
        RowBox[{"-", 
         SqrtBox["2"]}]}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "04c07a4d-959d-41b8-8e58-9eca54ba9f88"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"x"},
       {"y"}
      }], ")"}], "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalZ]", "2"]}], TraditionalForm]],
  ExpressionUUID->"8e0d61da-8d0d-445a-bf30-817b75eb2364"],
 " is an integer point in the plane."
}], "Text",
 CellChangeTimes->{{3.942166325953901*^9, 3.9421663562892113`*^9}, {
  3.956848489943597*^9, 
  3.956848489943677*^9}},ExpressionUUID->"71313f8e-6141-4bd2-9bbe-\
06f06a11ade0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        SqrtBox["2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", 
        SqrtBox["2"]}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[82]:=",ExpressionUUID->"93e05ba3-9848-40de-a53f-2fa524c03dac"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s a picture of ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "3f1e8b5e-7299-4fb5-986e-08a3027e2ffa"],
 ":"
}], "Text",
 CellChangeTimes->{{3.942166513910668*^9, 3.942166522796702*^9}, {
  3.9421682431849213`*^9, 
  3.942168246972235*^9}},ExpressionUUID->"042ce2e7-f7d9-4450-91b9-\
b8b730626ae1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", ".005", "]"}], ",", 
     RowBox[{"PointSize", "[", "Large", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"P", ".", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "8"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9421682742894*^9, 3.942168290689237*^9}},
 CellLabel->
  "In[2948]:=",ExpressionUUID->"e8ea37ae-329b-4d71-9380-1036261c1097"],

Cell[BoxData[
 GraphicsBox[
  {PointSize[Large], Thickness[
   0.005], {PointBox[
     NCache[{10 + 10 2^Rational[1, 2], -10 + 10 2^Rational[1, 2]}, {
      24.14213562373095, 4.142135623730951}]], 
    PointBox[NCache[{10 + 9 2^Rational[1, 2], -10 + 9 2^Rational[1, 2]}, {
      22.72792206135786, 2.727922061357857}]], 
    PointBox[NCache[{10 + 8 2^Rational[1, 2], -10 + 8 2^Rational[1, 2]}, {
      21.31370849898476, 1.3137084989847612`}]], 
    PointBox[NCache[{10 + 7 2^Rational[1, 2], -10 + 7 2^Rational[1, 2]}, {
      19.899494936611667`, -0.10050506338833465`}]], 
    PointBox[NCache[{10 + 6 2^Rational[1, 2], -10 + 6 2^Rational[1, 2]}, {
      18.48528137423857, -1.5147186257614287`}]], 
    PointBox[NCache[{10 + 5 2^Rational[1, 2], -10 + 5 2^Rational[1, 2]}, {
      17.071067811865476`, -2.9289321881345245`}]], 
    PointBox[NCache[{10 + 4 2^Rational[1, 2], -10 + 4 2^Rational[1, 2]}, {
      15.65685424949238, -4.343145750507619}]], 
    PointBox[NCache[{10 + 3 2^Rational[1, 2], -10 + 3 2^Rational[1, 2]}, {
      14.242640687119286`, -5.757359312880714}]], 
    PointBox[NCache[{10 + 2 2^Rational[1, 2], -10 + 2 2^Rational[1, 2]}, {
      12.82842712474619, -7.17157287525381}]], 
    PointBox[NCache[{10 + 2^Rational[1, 2], -10 + 2^Rational[1, 2]}, {
      11.414213562373096`, -8.585786437626904}]], PointBox[{10, -10}], 
    PointBox[NCache[{10 - 2^Rational[1, 2], -10 - 2^Rational[1, 2]}, {
      8.585786437626904, -11.414213562373096`}]], 
    PointBox[NCache[{10 - 2 2^Rational[1, 2], -10 - 2 2^Rational[1, 2]}, {
      7.17157287525381, -12.82842712474619}]], 
    PointBox[NCache[{10 - 3 2^Rational[1, 2], -10 - 3 2^Rational[1, 2]}, {
      5.757359312880714, -14.242640687119286`}]], 
    PointBox[NCache[{10 - 4 2^Rational[1, 2], -10 - 4 2^Rational[1, 2]}, {
      4.343145750507619, -15.65685424949238}]], 
    PointBox[NCache[{10 - 5 2^Rational[1, 2], -10 - 5 2^Rational[1, 2]}, {
      2.9289321881345245`, -17.071067811865476`}]], 
    PointBox[NCache[{10 - 6 2^Rational[1, 2], -10 - 6 2^Rational[1, 2]}, {
      1.5147186257614287`, -18.48528137423857}]], 
    PointBox[NCache[{10 - 7 2^Rational[1, 2], -10 - 7 2^Rational[1, 2]}, {
      0.10050506338833465`, -19.899494936611667`}]], 
    PointBox[NCache[{
      10 - 8 2^Rational[1, 2], -10 - 8 
       2^Rational[1, 2]}, {-1.3137084989847612`, -21.31370849898476}]], 
    PointBox[NCache[{
      10 - 9 2^Rational[1, 2], -10 - 9 
       2^Rational[1, 2]}, {-2.727922061357857, -22.72792206135786}]], 
    PointBox[NCache[{
      10 - 10 2^Rational[1, 2], -10 - 10 
       2^Rational[1, 2]}, {-4.142135623730951, -24.14213562373095}]]}, {
    PointBox[NCache[{9 + 10 2^Rational[1, 2], -9 + 10 2^Rational[1, 2]}, {
      23.14213562373095, 5.142135623730951}]], 
    PointBox[NCache[{9 + 9 2^Rational[1, 2], -9 + 9 2^Rational[1, 2]}, {
      21.72792206135786, 3.727922061357857}]], 
    PointBox[NCache[{9 + 8 2^Rational[1, 2], -9 + 8 2^Rational[1, 2]}, {
      20.31370849898476, 2.313708498984761}]], 
    PointBox[NCache[{9 + 7 2^Rational[1, 2], -9 + 7 2^Rational[1, 2]}, {
      18.899494936611667`, 0.8994949366116654}]], 
    PointBox[NCache[{9 + 6 2^Rational[1, 2], -9 + 6 2^Rational[1, 2]}, {
      17.48528137423857, -0.5147186257614287}]], 
    PointBox[NCache[{9 + 5 2^Rational[1, 2], -9 + 5 2^Rational[1, 2]}, {
      16.071067811865476`, -1.9289321881345245`}]], 
    PointBox[NCache[{9 + 4 2^Rational[1, 2], -9 + 4 2^Rational[1, 2]}, {
      14.65685424949238, -3.3431457505076194`}]], 
    PointBox[NCache[{9 + 3 2^Rational[1, 2], -9 + 3 2^Rational[1, 2]}, {
      13.242640687119286`, -4.757359312880714}]], 
    PointBox[NCache[{9 + 2 2^Rational[1, 2], -9 + 2 2^Rational[1, 2]}, {
      11.82842712474619, -6.17157287525381}]], 
    PointBox[NCache[{9 + 2^Rational[1, 2], -9 + 2^Rational[1, 2]}, {
      10.414213562373096`, -7.585786437626905}]], PointBox[{9, -9}], 
    PointBox[NCache[{9 - 2^Rational[1, 2], -9 - 2^Rational[1, 2]}, {
      7.585786437626905, -10.414213562373096`}]], 
    PointBox[NCache[{9 - 2 2^Rational[1, 2], -9 - 2 2^Rational[1, 2]}, {
      6.17157287525381, -11.82842712474619}]], 
    PointBox[NCache[{9 - 3 2^Rational[1, 2], -9 - 3 2^Rational[1, 2]}, {
      4.757359312880714, -13.242640687119286`}]], 
    PointBox[NCache[{9 - 4 2^Rational[1, 2], -9 - 4 2^Rational[1, 2]}, {
      3.3431457505076194`, -14.65685424949238}]], 
    PointBox[NCache[{9 - 5 2^Rational[1, 2], -9 - 5 2^Rational[1, 2]}, {
      1.9289321881345245`, -16.071067811865476`}]], 
    PointBox[NCache[{9 - 6 2^Rational[1, 2], -9 - 6 2^Rational[1, 2]}, {
      0.5147186257614287, -17.48528137423857}]], 
    PointBox[NCache[{
      9 - 7 2^Rational[1, 2], -9 - 7 
       2^Rational[1, 2]}, {-0.8994949366116654, -18.899494936611667`}]], 
    PointBox[NCache[{
      9 - 8 2^Rational[1, 2], -9 - 8 
       2^Rational[1, 2]}, {-2.313708498984761, -20.31370849898476}]], 
    PointBox[NCache[{
      9 - 9 2^Rational[1, 2], -9 - 9 
       2^Rational[1, 2]}, {-3.727922061357857, -21.72792206135786}]], 
    PointBox[NCache[{
      9 - 10 2^Rational[1, 2], -9 - 10 
       2^Rational[1, 2]}, {-5.142135623730951, -23.14213562373095}]]}, {
    PointBox[NCache[{8 + 10 2^Rational[1, 2], -8 + 10 2^Rational[1, 2]}, {
      22.14213562373095, 6.142135623730951}]], 
    PointBox[NCache[{8 + 9 2^Rational[1, 2], -8 + 9 2^Rational[1, 2]}, {
      20.72792206135786, 4.727922061357857}]], 
    PointBox[NCache[{8 + 8 2^Rational[1, 2], -8 + 8 2^Rational[1, 2]}, {
      19.31370849898476, 3.313708498984761}]], 
    PointBox[NCache[{8 + 7 2^Rational[1, 2], -8 + 7 2^Rational[1, 2]}, {
      17.899494936611667`, 1.8994949366116654`}]], 
    PointBox[NCache[{8 + 6 2^Rational[1, 2], -8 + 6 2^Rational[1, 2]}, {
      16.48528137423857, 0.4852813742385713}]], 
    PointBox[NCache[{8 + 5 2^Rational[1, 2], -8 + 5 2^Rational[1, 2]}, {
      15.071067811865476`, -0.9289321881345245}]], 
    PointBox[NCache[{8 + 4 2^Rational[1, 2], -8 + 4 2^Rational[1, 2]}, {
      13.65685424949238, -2.3431457505076194`}]], 
    PointBox[NCache[{8 + 3 2^Rational[1, 2], -8 + 3 2^Rational[1, 2]}, {
      12.242640687119286`, -3.7573593128807143`}]], 
    PointBox[NCache[{8 + 2 2^Rational[1, 2], -8 + 2 2^Rational[1, 2]}, {
      10.82842712474619, -5.17157287525381}]], 
    PointBox[NCache[{8 + 2^Rational[1, 2], -8 + 2^Rational[1, 2]}, {
      9.414213562373096, -6.585786437626905}]], PointBox[{8, -8}], 
    PointBox[NCache[{8 - 2^Rational[1, 2], -8 - 2^Rational[1, 2]}, {
      6.585786437626905, -9.414213562373096}]], 
    PointBox[NCache[{8 - 2 2^Rational[1, 2], -8 - 2 2^Rational[1, 2]}, {
      5.17157287525381, -10.82842712474619}]], 
    PointBox[NCache[{8 - 3 2^Rational[1, 2], -8 - 3 2^Rational[1, 2]}, {
      3.7573593128807143`, -12.242640687119286`}]], 
    PointBox[NCache[{8 - 4 2^Rational[1, 2], -8 - 4 2^Rational[1, 2]}, {
      2.3431457505076194`, -13.65685424949238}]], 
    PointBox[NCache[{8 - 5 2^Rational[1, 2], -8 - 5 2^Rational[1, 2]}, {
      0.9289321881345245, -15.071067811865476`}]], 
    PointBox[NCache[{
      8 - 6 2^Rational[1, 2], -8 - 6 
       2^Rational[1, 2]}, {-0.4852813742385713, -16.48528137423857}]], 
    PointBox[NCache[{
      8 - 7 2^Rational[1, 2], -8 - 7 
       2^Rational[1, 2]}, {-1.8994949366116654`, -17.899494936611667`}]], 
    PointBox[NCache[{
      8 - 8 2^Rational[1, 2], -8 - 8 
       2^Rational[1, 2]}, {-3.313708498984761, -19.31370849898476}]], 
    PointBox[NCache[{
      8 - 9 2^Rational[1, 2], -8 - 9 
       2^Rational[1, 2]}, {-4.727922061357857, -20.72792206135786}]], 
    PointBox[NCache[{
      8 - 10 2^Rational[1, 2], -8 - 10 
       2^Rational[1, 2]}, {-6.142135623730951, -22.14213562373095}]]}, {
    PointBox[NCache[{7 + 10 2^Rational[1, 2], -7 + 10 2^Rational[1, 2]}, {
      21.14213562373095, 7.142135623730951}]], 
    PointBox[NCache[{7 + 9 2^Rational[1, 2], -7 + 9 2^Rational[1, 2]}, {
      19.72792206135786, 5.727922061357857}]], 
    PointBox[NCache[{7 + 8 2^Rational[1, 2], -7 + 8 2^Rational[1, 2]}, {
      18.31370849898476, 4.313708498984761}]], 
    PointBox[NCache[{7 + 7 2^Rational[1, 2], -7 + 7 2^Rational[1, 2]}, {
      16.899494936611667`, 2.8994949366116654`}]], 
    PointBox[NCache[{7 + 6 2^Rational[1, 2], -7 + 6 2^Rational[1, 2]}, {
      15.485281374238571`, 1.4852813742385713`}]], 
    PointBox[NCache[{7 + 5 2^Rational[1, 2], -7 + 5 2^Rational[1, 2]}, {
      14.071067811865476`, 0.0710678118654755}]], 
    PointBox[NCache[{7 + 4 2^Rational[1, 2], -7 + 4 2^Rational[1, 2]}, {
      12.65685424949238, -1.3431457505076194`}]], 
    PointBox[NCache[{7 + 3 2^Rational[1, 2], -7 + 3 2^Rational[1, 2]}, {
      11.242640687119286`, -2.7573593128807143`}]], 
    PointBox[
     NCache[{7 + 2 2^Rational[1, 2], -7 + 2 2^Rational[1, 2]}, {
      9.82842712474619, -4.17157287525381}]], 
    PointBox[NCache[{7 + 2^Rational[1, 2], -7 + 2^Rational[1, 2]}, {
      8.414213562373096, -5.585786437626905}]], PointBox[{7, -7}], 
    PointBox[NCache[{7 - 2^Rational[1, 2], -7 - 2^Rational[1, 2]}, {
      5.585786437626905, -8.414213562373096}]], 
    PointBox[NCache[{7 - 2 2^Rational[1, 2], -7 - 2 2^Rational[1, 2]}, {
      4.17157287525381, -9.82842712474619}]], 
    PointBox[NCache[{7 - 3 2^Rational[1, 2], -7 - 3 2^Rational[1, 2]}, {
      2.7573593128807143`, -11.242640687119286`}]], 
    PointBox[NCache[{7 - 4 2^Rational[1, 2], -7 - 4 2^Rational[1, 2]}, {
      1.3431457505076194`, -12.65685424949238}]], 
    PointBox[NCache[{
      7 - 5 2^Rational[1, 2], -7 - 5 
       2^Rational[1, 2]}, {-0.0710678118654755, -14.071067811865476`}]], 
    PointBox[NCache[{
      7 - 6 2^Rational[1, 2], -7 - 6 
       2^Rational[1, 2]}, {-1.4852813742385713`, -15.485281374238571`}]], 
    PointBox[NCache[{
      7 - 7 2^Rational[1, 2], -7 - 7 
       2^Rational[1, 2]}, {-2.8994949366116654`, -16.899494936611667`}]], 
    PointBox[NCache[{
      7 - 8 2^Rational[1, 2], -7 - 8 
       2^Rational[1, 2]}, {-4.313708498984761, -18.31370849898476}]], 
    PointBox[NCache[{
      7 - 9 2^Rational[1, 2], -7 - 9 
       2^Rational[1, 2]}, {-5.727922061357857, -19.72792206135786}]], 
    PointBox[NCache[{
      7 - 10 2^Rational[1, 2], -7 - 10 
       2^Rational[1, 2]}, {-7.142135623730951, -21.14213562373095}]]}, {
    PointBox[NCache[{6 + 10 2^Rational[1, 2], -6 + 10 2^Rational[1, 2]}, {
      20.14213562373095, 8.142135623730951}]], 
    PointBox[NCache[{6 + 9 2^Rational[1, 2], -6 + 9 2^Rational[1, 2]}, {
      18.72792206135786, 6.727922061357857}]], 
    PointBox[NCache[{6 + 8 2^Rational[1, 2], -6 + 8 2^Rational[1, 2]}, {
      17.31370849898476, 5.313708498984761}]], 
    PointBox[NCache[{6 + 7 2^Rational[1, 2], -6 + 7 2^Rational[1, 2]}, {
      15.899494936611665`, 3.8994949366116654`}]], 
    PointBox[NCache[{6 + 6 2^Rational[1, 2], -6 + 6 2^Rational[1, 2]}, {
      14.485281374238571`, 2.4852813742385713`}]], 
    PointBox[NCache[{6 + 5 2^Rational[1, 2], -6 + 5 2^Rational[1, 2]}, {
      13.071067811865476`, 1.0710678118654755`}]], 
    PointBox[NCache[{6 + 4 2^Rational[1, 2], -6 + 4 2^Rational[1, 2]}, {
      11.65685424949238, -0.3431457505076194}]], 
    PointBox[NCache[{6 + 3 2^Rational[1, 2], -6 + 3 2^Rational[1, 2]}, {
      10.242640687119286`, -1.7573593128807143`}]], 
    PointBox[NCache[{6 + 2 2^Rational[1, 2], -6 + 2 2^Rational[1, 2]}, {
      8.82842712474619, -3.1715728752538097`}]], 
    PointBox[NCache[{6 + 2^Rational[1, 2], -6 + 2^Rational[1, 2]}, {
      7.414213562373095, -4.585786437626905}]], PointBox[{6, -6}], 
    PointBox[NCache[{6 - 2^Rational[1, 2], -6 - 2^Rational[1, 2]}, {
      4.585786437626905, -7.414213562373095}]], 
    PointBox[NCache[{6 - 2 2^Rational[1, 2], -6 - 2 2^Rational[1, 2]}, {
      3.1715728752538097`, -8.82842712474619}]], 
    PointBox[NCache[{6 - 3 2^Rational[1, 2], -6 - 3 2^Rational[1, 2]}, {
      1.7573593128807143`, -10.242640687119286`}]], 
    PointBox[NCache[{6 - 4 2^Rational[1, 2], -6 - 4 2^Rational[1, 2]}, {
      0.3431457505076194, -11.65685424949238}]], 
    PointBox[NCache[{
      6 - 5 2^Rational[1, 2], -6 - 5 
       2^Rational[1, 2]}, {-1.0710678118654755`, -13.071067811865476`}]], 
    PointBox[NCache[{
      6 - 6 2^Rational[1, 2], -6 - 6 
       2^Rational[1, 2]}, {-2.4852813742385713`, -14.485281374238571`}]], 
    PointBox[NCache[{
      6 - 7 2^Rational[1, 2], -6 - 7 
       2^Rational[1, 2]}, {-3.8994949366116654`, -15.899494936611665`}]], 
    PointBox[NCache[{
      6 - 8 2^Rational[1, 2], -6 - 8 
       2^Rational[1, 2]}, {-5.313708498984761, -17.31370849898476}]], 
    PointBox[NCache[{
      6 - 9 2^Rational[1, 2], -6 - 9 
       2^Rational[1, 2]}, {-6.727922061357857, -18.72792206135786}]], 
    PointBox[NCache[{
      6 - 10 2^Rational[1, 2], -6 - 10 
       2^Rational[1, 2]}, {-8.142135623730951, -20.14213562373095}]]}, {
    PointBox[NCache[{5 + 10 2^Rational[1, 2], -5 + 10 2^Rational[1, 2]}, {
      19.14213562373095, 9.142135623730951}]], 
    PointBox[NCache[{5 + 9 2^Rational[1, 2], -5 + 9 2^Rational[1, 2]}, {
      17.72792206135786, 7.727922061357857}]], 
    PointBox[NCache[{5 + 8 2^Rational[1, 2], -5 + 8 2^Rational[1, 2]}, {
      16.31370849898476, 6.313708498984761}]], 
    PointBox[NCache[{5 + 7 2^Rational[1, 2], -5 + 7 2^Rational[1, 2]}, {
      14.899494936611665`, 4.899494936611665}]], 
    PointBox[NCache[{5 + 6 2^Rational[1, 2], -5 + 6 2^Rational[1, 2]}, {
      13.485281374238571`, 3.4852813742385713`}]], 
    PointBox[NCache[{5 + 5 2^Rational[1, 2], -5 + 5 2^Rational[1, 2]}, {
      12.071067811865476`, 2.0710678118654755`}]], 
    PointBox[NCache[{5 + 4 2^Rational[1, 2], -5 + 4 2^Rational[1, 2]}, {
      10.65685424949238, 0.6568542494923806}]], 
    PointBox[NCache[{5 + 3 2^Rational[1, 2], -5 + 3 2^Rational[1, 2]}, {
      9.242640687119286, -0.7573593128807143}]], 
    PointBox[NCache[{5 + 2 2^Rational[1, 2], -5 + 2 2^Rational[1, 2]}, {
      7.82842712474619, -2.1715728752538097`}]], 
    PointBox[NCache[{5 + 2^Rational[1, 2], -5 + 2^Rational[1, 2]}, {
      6.414213562373095, -3.585786437626905}]], PointBox[{5, -5}], 
    PointBox[NCache[{5 - 2^Rational[1, 2], -5 - 2^Rational[1, 2]}, {
      3.585786437626905, -6.414213562373095}]], 
    PointBox[NCache[{5 - 2 2^Rational[1, 2], -5 - 2 2^Rational[1, 2]}, {
      2.1715728752538097`, -7.82842712474619}]], 
    PointBox[NCache[{5 - 3 2^Rational[1, 2], -5 - 3 2^Rational[1, 2]}, {
      0.7573593128807143, -9.242640687119286}]], 
    PointBox[NCache[{
      5 - 4 2^Rational[1, 2], -5 - 4 
       2^Rational[1, 2]}, {-0.6568542494923806, -10.65685424949238}]], 
    PointBox[NCache[{
      5 - 5 2^Rational[1, 2], -5 - 5 
       2^Rational[1, 2]}, {-2.0710678118654755`, -12.071067811865476`}]], 
    PointBox[NCache[{
      5 - 6 2^Rational[1, 2], -5 - 6 
       2^Rational[1, 2]}, {-3.4852813742385713`, -13.485281374238571`}]], 
    PointBox[NCache[{
      5 - 7 2^Rational[1, 2], -5 - 7 
       2^Rational[1, 2]}, {-4.899494936611665, -14.899494936611665`}]], 
    PointBox[NCache[{
      5 - 8 2^Rational[1, 2], -5 - 8 
       2^Rational[1, 2]}, {-6.313708498984761, -16.31370849898476}]], 
    PointBox[NCache[{
      5 - 9 2^Rational[1, 2], -5 - 9 
       2^Rational[1, 2]}, {-7.727922061357857, -17.72792206135786}]], 
    PointBox[NCache[{
      5 - 10 2^Rational[1, 2], -5 - 10 
       2^Rational[1, 2]}, {-9.142135623730951, -19.14213562373095}]]}, {
    PointBox[NCache[{4 + 10 2^Rational[1, 2], -4 + 10 2^Rational[1, 2]}, {
      18.14213562373095, 10.142135623730951`}]], 
    PointBox[NCache[{4 + 9 2^Rational[1, 2], -4 + 9 2^Rational[1, 2]}, {
      16.72792206135786, 8.727922061357857}]], 
    PointBox[NCache[{4 + 8 2^Rational[1, 2], -4 + 8 2^Rational[1, 2]}, {
      15.313708498984761`, 7.313708498984761}]], 
    PointBox[NCache[{4 + 7 2^Rational[1, 2], -4 + 7 2^Rational[1, 2]}, {
      13.899494936611665`, 5.899494936611665}]], 
    PointBox[NCache[{4 + 6 2^Rational[1, 2], -4 + 6 2^Rational[1, 2]}, {
      12.485281374238571`, 4.485281374238571}]], 
    PointBox[NCache[{4 + 5 2^Rational[1, 2], -4 + 5 2^Rational[1, 2]}, {
      11.071067811865476`, 3.0710678118654755`}]], 
    PointBox[NCache[{4 + 4 2^Rational[1, 2], -4 + 4 2^Rational[1, 2]}, {
      9.65685424949238, 1.6568542494923806`}]], 
    PointBox[NCache[{4 + 3 2^Rational[1, 2], -4 + 3 2^Rational[1, 2]}, {
      8.242640687119286, 0.24264068711928566`}]], 
    PointBox[NCache[{4 + 2 2^Rational[1, 2], -4 + 2 2^Rational[1, 2]}, {
      6.82842712474619, -1.1715728752538097`}]], 
    PointBox[NCache[{4 + 2^Rational[1, 2], -4 + 2^Rational[1, 2]}, {
      5.414213562373095, -2.585786437626905}]], PointBox[{4, -4}], 
    PointBox[NCache[{4 - 2^Rational[1, 2], -4 - 2^Rational[1, 2]}, {
      2.585786437626905, -5.414213562373095}]], 
    PointBox[NCache[{4 - 2 2^Rational[1, 2], -4 - 2 2^Rational[1, 2]}, {
      1.1715728752538097`, -6.82842712474619}]], 
    PointBox[NCache[{
      4 - 3 2^Rational[1, 2], -4 - 3 
       2^Rational[1, 2]}, {-0.24264068711928566`, -8.242640687119286}]], 
    PointBox[NCache[{
      4 - 4 2^Rational[1, 2], -4 - 4 
       2^Rational[1, 2]}, {-1.6568542494923806`, -9.65685424949238}]], 
    PointBox[NCache[{
      4 - 5 2^Rational[1, 2], -4 - 5 
       2^Rational[1, 2]}, {-3.0710678118654755`, -11.071067811865476`}]], 
    PointBox[NCache[{
      4 - 6 2^Rational[1, 2], -4 - 6 
       2^Rational[1, 2]}, {-4.485281374238571, -12.485281374238571`}]], 
    PointBox[NCache[{
      4 - 7 2^Rational[1, 2], -4 - 7 
       2^Rational[1, 2]}, {-5.899494936611665, -13.899494936611665`}]], 
    PointBox[
     NCache[{4 - 8 2^Rational[1, 2], -4 - 8 
       2^Rational[1, 2]}, {-7.313708498984761, -15.313708498984761`}]], 
    PointBox[NCache[{
      4 - 9 2^Rational[1, 2], -4 - 9 
       2^Rational[1, 2]}, {-8.727922061357857, -16.72792206135786}]], 
    PointBox[NCache[{
      4 - 10 2^Rational[1, 2], -4 - 10 
       2^Rational[1, 2]}, {-10.142135623730951`, -18.14213562373095}]]}, {
    PointBox[NCache[{3 + 10 2^Rational[1, 2], -3 + 10 2^Rational[1, 2]}, {
      17.14213562373095, 11.142135623730951`}]], 
    PointBox[NCache[{3 + 9 2^Rational[1, 2], -3 + 9 2^Rational[1, 2]}, {
      15.727922061357857`, 9.727922061357857}]], 
    PointBox[NCache[{3 + 8 2^Rational[1, 2], -3 + 8 2^Rational[1, 2]}, {
      14.313708498984761`, 8.313708498984761}]], 
    PointBox[NCache[{3 + 7 2^Rational[1, 2], -3 + 7 2^Rational[1, 2]}, {
      12.899494936611665`, 6.899494936611665}]], 
    PointBox[NCache[{3 + 6 2^Rational[1, 2], -3 + 6 2^Rational[1, 2]}, {
      11.485281374238571`, 5.485281374238571}]], 
    PointBox[NCache[{3 + 5 2^Rational[1, 2], -3 + 5 2^Rational[1, 2]}, {
      10.071067811865476`, 4.0710678118654755`}]], 
    PointBox[NCache[{3 + 4 2^Rational[1, 2], -3 + 4 2^Rational[1, 2]}, {
      8.65685424949238, 2.6568542494923806`}]], 
    PointBox[NCache[{3 + 3 2^Rational[1, 2], -3 + 3 2^Rational[1, 2]}, {
      7.242640687119286, 1.2426406871192857`}]], 
    PointBox[NCache[{3 + 2 2^Rational[1, 2], -3 + 2 2^Rational[1, 2]}, {
      5.82842712474619, -0.1715728752538097}]], 
    PointBox[NCache[{3 + 2^Rational[1, 2], -3 + 2^Rational[1, 2]}, {
      4.414213562373095, -1.5857864376269049`}]], PointBox[{3, -3}], 
    PointBox[NCache[{3 - 2^Rational[1, 2], -3 - 2^Rational[1, 2]}, {
      1.5857864376269049`, -4.414213562373095}]], 
    PointBox[NCache[{3 - 2 2^Rational[1, 2], -3 - 2 2^Rational[1, 2]}, {
      0.1715728752538097, -5.82842712474619}]], 
    PointBox[NCache[{
      3 - 3 2^Rational[1, 2], -3 - 3 
       2^Rational[1, 2]}, {-1.2426406871192857`, -7.242640687119286}]], 
    PointBox[NCache[{
      3 - 4 2^Rational[1, 2], -3 - 4 
       2^Rational[1, 2]}, {-2.6568542494923806`, -8.65685424949238}]], 
    PointBox[NCache[{
      3 - 5 2^Rational[1, 2], -3 - 5 
       2^Rational[1, 2]}, {-4.0710678118654755`, -10.071067811865476`}]], 
    PointBox[NCache[{
      3 - 6 2^Rational[1, 2], -3 - 6 
       2^Rational[1, 2]}, {-5.485281374238571, -11.485281374238571`}]], 
    PointBox[NCache[{
      3 - 7 2^Rational[1, 2], -3 - 7 
       2^Rational[1, 2]}, {-6.899494936611665, -12.899494936611665`}]], 
    PointBox[NCache[{
      3 - 8 2^Rational[1, 2], -3 - 8 
       2^Rational[1, 2]}, {-8.313708498984761, -14.313708498984761`}]], 
    PointBox[NCache[{
      3 - 9 2^Rational[1, 2], -3 - 9 
       2^Rational[1, 2]}, {-9.727922061357857, -15.727922061357857`}]], 
    PointBox[NCache[{
      3 - 10 2^Rational[1, 2], -3 - 10 
       2^Rational[1, 2]}, {-11.142135623730951`, -17.14213562373095}]]}, {
    PointBox[NCache[{2 + 10 2^Rational[1, 2], -2 + 10 2^Rational[1, 2]}, {
      16.14213562373095, 12.142135623730951`}]], 
    PointBox[NCache[{2 + 9 2^Rational[1, 2], -2 + 9 2^Rational[1, 2]}, {
      14.727922061357857`, 10.727922061357857`}]], 
    PointBox[NCache[{2 + 8 2^Rational[1, 2], -2 + 8 2^Rational[1, 2]}, {
      13.313708498984761`, 9.313708498984761}]], 
    PointBox[NCache[{2 + 7 2^Rational[1, 2], -2 + 7 2^Rational[1, 2]}, {
      11.899494936611665`, 7.899494936611665}]], 
    PointBox[NCache[{2 + 6 2^Rational[1, 2], -2 + 6 2^Rational[1, 2]}, {
      10.485281374238571`, 6.485281374238571}]], 
    PointBox[NCache[{2 + 5 2^Rational[1, 2], -2 + 5 2^Rational[1, 2]}, {
      9.071067811865476, 5.0710678118654755`}]], 
    PointBox[NCache[{2 + 4 2^Rational[1, 2], -2 + 4 2^Rational[1, 2]}, {
      7.656854249492381, 3.6568542494923806`}]], 
    PointBox[NCache[{2 + 3 2^Rational[1, 2], -2 + 3 2^Rational[1, 2]}, {
      6.242640687119286, 2.2426406871192857`}]], 
    PointBox[NCache[{2 + 2 2^Rational[1, 2], -2 + 2 2^Rational[1, 2]}, {
      4.82842712474619, 0.8284271247461903}]], 
    PointBox[NCache[{2 + 2^Rational[1, 2], -2 + 2^Rational[1, 2]}, {
      3.414213562373095, -0.5857864376269049}]], PointBox[{2, -2}], 
    PointBox[NCache[{2 - 2^Rational[1, 2], -2 - 2^Rational[1, 2]}, {
      0.5857864376269049, -3.414213562373095}]], 
    PointBox[NCache[{
      2 - 2 2^Rational[1, 2], -2 - 2 
       2^Rational[1, 2]}, {-0.8284271247461903, -4.82842712474619}]], 
    PointBox[NCache[{
      2 - 3 2^Rational[1, 2], -2 - 3 
       2^Rational[1, 2]}, {-2.2426406871192857`, -6.242640687119286}]], 
    PointBox[NCache[{
      2 - 4 2^Rational[1, 2], -2 - 4 
       2^Rational[1, 2]}, {-3.6568542494923806`, -7.656854249492381}]], 
    PointBox[NCache[{
      2 - 5 2^Rational[1, 2], -2 - 5 
       2^Rational[1, 2]}, {-5.0710678118654755`, -9.071067811865476}]], 
    PointBox[NCache[{
      2 - 6 2^Rational[1, 2], -2 - 6 
       2^Rational[1, 2]}, {-6.485281374238571, -10.485281374238571`}]], 
    PointBox[NCache[{
      2 - 7 2^Rational[1, 2], -2 - 7 
       2^Rational[1, 2]}, {-7.899494936611665, -11.899494936611665`}]], 
    PointBox[NCache[{
      2 - 8 2^Rational[1, 2], -2 - 8 
       2^Rational[1, 2]}, {-9.313708498984761, -13.313708498984761`}]], 
    PointBox[NCache[{
      2 - 9 2^Rational[1, 2], -2 - 9 
       2^Rational[1, 2]}, {-10.727922061357857`, -14.727922061357857`}]], 
    PointBox[NCache[{
      2 - 10 2^Rational[1, 2], -2 - 10 
       2^Rational[1, 2]}, {-12.142135623730951`, -16.14213562373095}]]}, {
    PointBox[NCache[{1 + 10 2^Rational[1, 2], -1 + 10 2^Rational[1, 2]}, {
      15.142135623730951`, 13.142135623730951`}]], 
    PointBox[NCache[{1 + 9 2^Rational[1, 2], -1 + 9 2^Rational[1, 2]}, {
      13.727922061357857`, 11.727922061357857`}]], 
    PointBox[NCache[{1 + 8 2^Rational[1, 2], -1 + 8 2^Rational[1, 2]}, {
      12.313708498984761`, 10.313708498984761`}]], 
    PointBox[NCache[{1 + 7 2^Rational[1, 2], -1 + 7 2^Rational[1, 2]}, {
      10.899494936611665`, 8.899494936611665}]], 
    PointBox[NCache[{1 + 6 2^Rational[1, 2], -1 + 6 2^Rational[1, 2]}, {
      9.485281374238571, 7.485281374238571}]], 
    PointBox[NCache[{1 + 5 2^Rational[1, 2], -1 + 5 2^Rational[1, 2]}, {
      8.071067811865476, 6.0710678118654755`}]], 
    PointBox[NCache[{1 + 4 2^Rational[1, 2], -1 + 4 2^Rational[1, 2]}, {
      6.656854249492381, 4.656854249492381}]], 
    PointBox[NCache[{1 + 3 2^Rational[1, 2], -1 + 3 2^Rational[1, 2]}, {
      5.242640687119286, 3.2426406871192857`}]], 
    PointBox[NCache[{1 + 2 2^Rational[1, 2], -1 + 2 2^Rational[1, 2]}, {
      3.8284271247461903`, 1.8284271247461903`}]], 
    PointBox[NCache[{1 + 2^Rational[1, 2], -1 + 2^Rational[1, 2]}, {
      2.414213562373095, 0.41421356237309515`}]], PointBox[{1, -1}], 
    PointBox[NCache[{
      1 - 2^Rational[1, 2], -1 - 2^
       Rational[1, 2]}, {-0.41421356237309515`, -2.414213562373095}]], 
    PointBox[NCache[{
      1 - 2 2^Rational[1, 2], -1 - 2 
       2^Rational[1, 2]}, {-1.8284271247461903`, -3.8284271247461903`}]], 
    PointBox[NCache[{
      1 - 3 2^Rational[1, 2], -1 - 3 
       2^Rational[1, 2]}, {-3.2426406871192857`, -5.242640687119286}]], 
    PointBox[NCache[{
      1 - 4 2^Rational[1, 2], -1 - 4 
       2^Rational[1, 2]}, {-4.656854249492381, -6.656854249492381}]], 
    PointBox[NCache[{
      1 - 5 2^Rational[1, 2], -1 - 5 
       2^Rational[1, 2]}, {-6.0710678118654755`, -8.071067811865476}]], 
    PointBox[NCache[{
      1 - 6 2^Rational[1, 2], -1 - 6 
       2^Rational[1, 2]}, {-7.485281374238571, -9.485281374238571}]], 
    PointBox[NCache[{
      1 - 7 2^Rational[1, 2], -1 - 7 
       2^Rational[1, 2]}, {-8.899494936611665, -10.899494936611665`}]], 
    PointBox[NCache[{
      1 - 8 2^Rational[1, 2], -1 - 8 
       2^Rational[1, 2]}, {-10.313708498984761`, -12.313708498984761`}]], 
    PointBox[NCache[{
      1 - 9 2^Rational[1, 2], -1 - 9 
       2^Rational[1, 2]}, {-11.727922061357857`, -13.727922061357857`}]], 
    PointBox[NCache[{
      1 - 10 2^Rational[1, 2], -1 - 10 
       2^Rational[1, 2]}, {-13.142135623730951`, -15.142135623730951`}]]}, {
    PointBox[NCache[{10 2^Rational[1, 2], 10 2^Rational[1, 2]}, {
      14.142135623730951`, 14.142135623730951`}]], 
    PointBox[NCache[{9 2^Rational[1, 2], 9 2^Rational[1, 2]}, {
      12.727922061357857`, 12.727922061357857`}]], 
    PointBox[NCache[{8 2^Rational[1, 2], 8 2^Rational[1, 2]}, {
      11.313708498984761`, 11.313708498984761`}]], 
    PointBox[NCache[{7 2^Rational[1, 2], 7 2^Rational[1, 2]}, {
      9.899494936611665, 9.899494936611665}]], 
    PointBox[NCache[{6 2^Rational[1, 2], 6 2^Rational[1, 2]}, {
      8.485281374238571, 8.485281374238571}]], 
    PointBox[NCache[{5 2^Rational[1, 2], 5 2^Rational[1, 2]}, {
      7.0710678118654755`, 7.0710678118654755`}]], 
    PointBox[NCache[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {
      5.656854249492381, 5.656854249492381}]], 
    PointBox[NCache[{3 2^Rational[1, 2], 3 2^Rational[1, 2]}, {
      4.242640687119286, 4.242640687119286}]], 
    PointBox[NCache[{2 2^Rational[1, 2], 2 2^Rational[1, 2]}, {
      2.8284271247461903`, 2.8284271247461903`}]], 
    PointBox[NCache[{2^Rational[1, 2], 2^Rational[1, 2]}, {
      1.4142135623730951`, 1.4142135623730951`}]], PointBox[{0, 0}], 
    PointBox[NCache[{-2^Rational[1, 2], -2^
        Rational[1, 2]}, {-1.4142135623730951`, -1.4142135623730951`}]], 
    PointBox[NCache[{(-2) 2^Rational[1, 2], (-2) 
       2^Rational[1, 2]}, {-2.8284271247461903`, -2.8284271247461903`}]], 
    PointBox[NCache[{(-3) 2^Rational[1, 2], (-3) 
       2^Rational[1, 2]}, {-4.242640687119286, -4.242640687119286}]], 
    PointBox[NCache[{(-4) 2^Rational[1, 2], (-4) 
       2^Rational[1, 2]}, {-5.656854249492381, -5.656854249492381}]], 
    PointBox[NCache[{(-5) 2^Rational[1, 2], (-5) 
       2^Rational[1, 2]}, {-7.0710678118654755`, -7.0710678118654755`}]], 
    PointBox[NCache[{(-6) 2^Rational[1, 2], (-6) 
       2^Rational[1, 2]}, {-8.485281374238571, -8.485281374238571}]], 
    PointBox[NCache[{(-7) 2^Rational[1, 2], (-7) 
       2^Rational[1, 2]}, {-9.899494936611665, -9.899494936611665}]], 
    PointBox[NCache[{(-8) 2^Rational[1, 2], (-8) 
       2^Rational[1, 2]}, {-11.313708498984761`, -11.313708498984761`}]], 
    PointBox[NCache[{(-9) 2^Rational[1, 2], (-9) 
       2^Rational[1, 2]}, {-12.727922061357857`, -12.727922061357857`}]], 
    PointBox[NCache[{(-10) 2^Rational[1, 2], (-10) 
       2^Rational[1, 2]}, {-14.142135623730951`, -14.142135623730951`}]]}, {
    PointBox[NCache[{-1 + 10 2^Rational[1, 2], 1 + 10 2^Rational[1, 2]}, {
      13.142135623730951`, 15.142135623730951`}]], 
    PointBox[NCache[{-1 + 9 2^Rational[1, 2], 1 + 9 2^Rational[1, 2]}, {
      11.727922061357857`, 13.727922061357857`}]], 
    PointBox[NCache[{-1 + 8 2^Rational[1, 2], 1 + 8 2^Rational[1, 2]}, {
      10.313708498984761`, 12.313708498984761`}]], 
    PointBox[NCache[{-1 + 7 2^Rational[1, 2], 1 + 7 2^Rational[1, 2]}, {
      8.899494936611665, 10.899494936611665`}]], 
    PointBox[NCache[{-1 + 6 2^Rational[1, 2], 1 + 6 2^Rational[1, 2]}, {
      7.485281374238571, 9.485281374238571}]], 
    PointBox[NCache[{-1 + 5 2^Rational[1, 2], 1 + 5 2^Rational[1, 2]}, {
      6.0710678118654755`, 8.071067811865476}]], 
    PointBox[NCache[{-1 + 4 2^Rational[1, 2], 1 + 4 2^Rational[1, 2]}, {
      4.656854249492381, 6.656854249492381}]], 
    PointBox[NCache[{-1 + 3 2^Rational[1, 2], 1 + 3 2^Rational[1, 2]}, {
      3.2426406871192857`, 5.242640687119286}]], 
    PointBox[NCache[{-1 + 2 2^Rational[1, 2], 1 + 2 2^Rational[1, 2]}, {
      1.8284271247461903`, 3.8284271247461903`}]], 
    PointBox[NCache[{-1 + 2^Rational[1, 2], 1 + 2^Rational[1, 2]}, {
      0.41421356237309515`, 2.414213562373095}]], PointBox[{-1, 1}], 
    PointBox[NCache[{-1 - 2^Rational[1, 2], 1 - 2^
       Rational[1, 2]}, {-2.414213562373095, -0.41421356237309515`}]], 
    PointBox[NCache[{-1 - 2 2^Rational[1, 2], 1 - 2 
       2^Rational[1, 2]}, {-3.8284271247461903`, -1.8284271247461903`}]], 
    PointBox[NCache[{-1 - 3 2^Rational[1, 2], 1 - 3 
       2^Rational[1, 2]}, {-5.242640687119286, -3.2426406871192857`}]], 
    PointBox[NCache[{-1 - 4 2^Rational[1, 2], 1 - 4 
       2^Rational[1, 2]}, {-6.656854249492381, -4.656854249492381}]], 
    PointBox[NCache[{-1 - 5 2^Rational[1, 2], 1 - 5 
       2^Rational[1, 2]}, {-8.071067811865476, -6.0710678118654755`}]], 
    PointBox[NCache[{-1 - 6 2^Rational[1, 2], 1 - 6 
       2^Rational[1, 2]}, {-9.485281374238571, -7.485281374238571}]], 
    PointBox[NCache[{-1 - 7 2^Rational[1, 2], 1 - 7 
       2^Rational[1, 2]}, {-10.899494936611665`, -8.899494936611665}]], 
    PointBox[NCache[{-1 - 8 2^Rational[1, 2], 1 - 8 
       2^Rational[1, 2]}, {-12.313708498984761`, -10.313708498984761`}]], 
    PointBox[NCache[{-1 - 9 2^Rational[1, 2], 1 - 9 
       2^Rational[1, 2]}, {-13.727922061357857`, -11.727922061357857`}]], 
    PointBox[NCache[{-1 - 10 2^Rational[1, 2], 1 - 10 
       2^Rational[1, 2]}, {-15.142135623730951`, -13.142135623730951`}]]}, {
    PointBox[
     NCache[{-2 + 10 2^Rational[1, 2], 2 + 10 2^Rational[1, 2]}, {
      12.142135623730951`, 16.14213562373095}]], 
    PointBox[NCache[{-2 + 9 2^Rational[1, 2], 2 + 9 2^Rational[1, 2]}, {
      10.727922061357857`, 14.727922061357857`}]], 
    PointBox[NCache[{-2 + 8 2^Rational[1, 2], 2 + 8 2^Rational[1, 2]}, {
      9.313708498984761, 13.313708498984761`}]], 
    PointBox[NCache[{-2 + 7 2^Rational[1, 2], 2 + 7 2^Rational[1, 2]}, {
      7.899494936611665, 11.899494936611665`}]], 
    PointBox[NCache[{-2 + 6 2^Rational[1, 2], 2 + 6 2^Rational[1, 2]}, {
      6.485281374238571, 10.485281374238571`}]], 
    PointBox[NCache[{-2 + 5 2^Rational[1, 2], 2 + 5 2^Rational[1, 2]}, {
      5.0710678118654755`, 9.071067811865476}]], 
    PointBox[NCache[{-2 + 4 2^Rational[1, 2], 2 + 4 2^Rational[1, 2]}, {
      3.6568542494923806`, 7.656854249492381}]], 
    PointBox[NCache[{-2 + 3 2^Rational[1, 2], 2 + 3 2^Rational[1, 2]}, {
      2.2426406871192857`, 6.242640687119286}]], 
    PointBox[NCache[{-2 + 2 2^Rational[1, 2], 2 + 2 2^Rational[1, 2]}, {
      0.8284271247461903, 4.82842712474619}]], 
    PointBox[NCache[{-2 + 2^Rational[1, 2], 2 + 
       2^Rational[1, 2]}, {-0.5857864376269049, 3.414213562373095}]], 
    PointBox[{-2, 2}], 
    PointBox[NCache[{-2 - 2^Rational[1, 2], 2 - 2^
       Rational[1, 2]}, {-3.414213562373095, 0.5857864376269049}]], 
    PointBox[NCache[{-2 - 2 2^Rational[1, 2], 2 - 2 
       2^Rational[1, 2]}, {-4.82842712474619, -0.8284271247461903}]], 
    PointBox[NCache[{-2 - 3 2^Rational[1, 2], 2 - 3 
       2^Rational[1, 2]}, {-6.242640687119286, -2.2426406871192857`}]], 
    PointBox[NCache[{-2 - 4 2^Rational[1, 2], 2 - 4 
       2^Rational[1, 2]}, {-7.656854249492381, -3.6568542494923806`}]], 
    PointBox[NCache[{-2 - 5 2^Rational[1, 2], 2 - 5 
       2^Rational[1, 2]}, {-9.071067811865476, -5.0710678118654755`}]], 
    PointBox[NCache[{-2 - 6 2^Rational[1, 2], 2 - 6 
       2^Rational[1, 2]}, {-10.485281374238571`, -6.485281374238571}]], 
    PointBox[NCache[{-2 - 7 2^Rational[1, 2], 2 - 7 
       2^Rational[1, 2]}, {-11.899494936611665`, -7.899494936611665}]], 
    PointBox[NCache[{-2 - 8 2^Rational[1, 2], 2 - 8 
       2^Rational[1, 2]}, {-13.313708498984761`, -9.313708498984761}]], 
    PointBox[NCache[{-2 - 9 2^Rational[1, 2], 2 - 9 
       2^Rational[1, 2]}, {-14.727922061357857`, -10.727922061357857`}]], 
    PointBox[NCache[{-2 - 10 2^Rational[1, 2], 2 - 10 
       2^Rational[1, 2]}, {-16.14213562373095, -12.142135623730951`}]]}, {
    PointBox[NCache[{-3 + 10 2^Rational[1, 2], 3 + 10 2^Rational[1, 2]}, {
      11.142135623730951`, 17.14213562373095}]], 
    PointBox[NCache[{-3 + 9 2^Rational[1, 2], 3 + 9 2^Rational[1, 2]}, {
      9.727922061357857, 15.727922061357857`}]], 
    PointBox[NCache[{-3 + 8 2^Rational[1, 2], 3 + 8 2^Rational[1, 2]}, {
      8.313708498984761, 14.313708498984761`}]], 
    PointBox[NCache[{-3 + 7 2^Rational[1, 2], 3 + 7 2^Rational[1, 2]}, {
      6.899494936611665, 12.899494936611665`}]], 
    PointBox[NCache[{-3 + 6 2^Rational[1, 2], 3 + 6 2^Rational[1, 2]}, {
      5.485281374238571, 11.485281374238571`}]], 
    PointBox[NCache[{-3 + 5 2^Rational[1, 2], 3 + 5 2^Rational[1, 2]}, {
      4.0710678118654755`, 10.071067811865476`}]], 
    PointBox[NCache[{-3 + 4 2^Rational[1, 2], 3 + 4 2^Rational[1, 2]}, {
      2.6568542494923806`, 8.65685424949238}]], 
    PointBox[NCache[{-3 + 3 2^Rational[1, 2], 3 + 3 2^Rational[1, 2]}, {
      1.2426406871192857`, 7.242640687119286}]], 
    PointBox[NCache[{-3 + 2 2^Rational[1, 2], 3 + 
       2 2^Rational[1, 2]}, {-0.1715728752538097, 5.82842712474619}]], 
    PointBox[NCache[{-3 + 2^Rational[1, 2], 3 + 
       2^Rational[1, 2]}, {-1.5857864376269049`, 4.414213562373095}]], 
    PointBox[{-3, 3}], 
    PointBox[NCache[{-3 - 2^Rational[1, 2], 3 - 2^
       Rational[1, 2]}, {-4.414213562373095, 1.5857864376269049`}]], 
    PointBox[NCache[{-3 - 2 2^Rational[1, 2], 3 - 2 
       2^Rational[1, 2]}, {-5.82842712474619, 0.1715728752538097}]], 
    PointBox[NCache[{-3 - 3 2^Rational[1, 2], 3 - 3 
       2^Rational[1, 2]}, {-7.242640687119286, -1.2426406871192857`}]], 
    PointBox[NCache[{-3 - 4 2^Rational[1, 2], 3 - 4 
       2^Rational[1, 2]}, {-8.65685424949238, -2.6568542494923806`}]], 
    PointBox[NCache[{-3 - 5 2^Rational[1, 2], 3 - 5 
       2^Rational[1, 2]}, {-10.071067811865476`, -4.0710678118654755`}]], 
    PointBox[NCache[{-3 - 6 2^Rational[1, 2], 3 - 6 
       2^Rational[1, 2]}, {-11.485281374238571`, -5.485281374238571}]], 
    PointBox[NCache[{-3 - 7 2^Rational[1, 2], 3 - 7 
       2^Rational[1, 2]}, {-12.899494936611665`, -6.899494936611665}]], 
    PointBox[NCache[{-3 - 8 2^Rational[1, 2], 3 - 8 
       2^Rational[1, 2]}, {-14.313708498984761`, -8.313708498984761}]], 
    PointBox[NCache[{-3 - 9 2^Rational[1, 2], 3 - 9 
       2^Rational[1, 2]}, {-15.727922061357857`, -9.727922061357857}]], 
    PointBox[NCache[{-3 - 10 2^Rational[1, 2], 3 - 10 
       2^Rational[1, 2]}, {-17.14213562373095, -11.142135623730951`}]]}, {
    PointBox[NCache[{-4 + 10 2^Rational[1, 2], 4 + 10 2^Rational[1, 2]}, {
      10.142135623730951`, 18.14213562373095}]], 
    PointBox[NCache[{-4 + 9 2^Rational[1, 2], 4 + 9 2^Rational[1, 2]}, {
      8.727922061357857, 16.72792206135786}]], 
    PointBox[NCache[{-4 + 8 2^Rational[1, 2], 4 + 8 2^Rational[1, 2]}, {
      7.313708498984761, 15.313708498984761`}]], 
    PointBox[NCache[{-4 + 7 2^Rational[1, 2], 4 + 7 2^Rational[1, 2]}, {
      5.899494936611665, 13.899494936611665`}]], 
    PointBox[NCache[{-4 + 6 2^Rational[1, 2], 4 + 6 2^Rational[1, 2]}, {
      4.485281374238571, 12.485281374238571`}]], 
    PointBox[NCache[{-4 + 5 2^Rational[1, 2], 4 + 5 2^Rational[1, 2]}, {
      3.0710678118654755`, 11.071067811865476`}]], 
    PointBox[NCache[{-4 + 4 2^Rational[1, 2], 4 + 4 2^Rational[1, 2]}, {
      1.6568542494923806`, 9.65685424949238}]], 
    PointBox[NCache[{-4 + 3 2^Rational[1, 2], 4 + 3 2^Rational[1, 2]}, {
      0.24264068711928566`, 8.242640687119286}]], 
    PointBox[NCache[{-4 + 2 2^Rational[1, 2], 4 + 
       2 2^Rational[1, 2]}, {-1.1715728752538097`, 6.82842712474619}]], 
    PointBox[NCache[{-4 + 2^Rational[1, 2], 4 + 
       2^Rational[1, 2]}, {-2.585786437626905, 5.414213562373095}]], 
    PointBox[{-4, 4}], 
    PointBox[NCache[{-4 - 2^Rational[1, 2], 4 - 2^
       Rational[1, 2]}, {-5.414213562373095, 2.585786437626905}]], 
    PointBox[NCache[{-4 - 2 2^Rational[1, 2], 4 - 2 
       2^Rational[1, 2]}, {-6.82842712474619, 1.1715728752538097`}]], 
    PointBox[NCache[{-4 - 3 2^Rational[1, 2], 4 - 3 
       2^Rational[1, 2]}, {-8.242640687119286, -0.24264068711928566`}]], 
    PointBox[NCache[{-4 - 4 2^Rational[1, 2], 4 - 4 
       2^Rational[1, 2]}, {-9.65685424949238, -1.6568542494923806`}]], 
    PointBox[NCache[{-4 - 5 2^Rational[1, 2], 4 - 5 
       2^Rational[1, 2]}, {-11.071067811865476`, -3.0710678118654755`}]], 
    PointBox[NCache[{-4 - 6 2^Rational[1, 2], 4 - 6 
       2^Rational[1, 2]}, {-12.485281374238571`, -4.485281374238571}]], 
    PointBox[NCache[{-4 - 7 2^Rational[1, 2], 4 - 7 
       2^Rational[1, 2]}, {-13.899494936611665`, -5.899494936611665}]], 
    PointBox[NCache[{-4 - 8 2^Rational[1, 2], 4 - 8 
       2^Rational[1, 2]}, {-15.313708498984761`, -7.313708498984761}]], 
    PointBox[NCache[{-4 - 9 2^Rational[1, 2], 4 - 9 
       2^Rational[1, 2]}, {-16.72792206135786, -8.727922061357857}]], 
    PointBox[NCache[{-4 - 10 2^Rational[1, 2], 4 - 10 
       2^Rational[1, 2]}, {-18.14213562373095, -10.142135623730951`}]]}, {
    PointBox[NCache[{-5 + 10 2^Rational[1, 2], 5 + 10 2^Rational[1, 2]}, {
      9.142135623730951, 19.14213562373095}]], 
    PointBox[NCache[{-5 + 9 2^Rational[1, 2], 5 + 9 2^Rational[1, 2]}, {
      7.727922061357857, 17.72792206135786}]], 
    PointBox[NCache[{-5 + 8 2^Rational[1, 2], 5 + 8 2^Rational[1, 2]}, {
      6.313708498984761, 16.31370849898476}]], 
    PointBox[NCache[{-5 + 7 2^Rational[1, 2], 5 + 7 2^Rational[1, 2]}, {
      4.899494936611665, 14.899494936611665`}]], 
    PointBox[NCache[{-5 + 6 2^Rational[1, 2], 5 + 6 2^Rational[1, 2]}, {
      3.4852813742385713`, 13.485281374238571`}]], 
    PointBox[NCache[{-5 + 5 2^Rational[1, 2], 5 + 5 2^Rational[1, 2]}, {
      2.0710678118654755`, 12.071067811865476`}]], 
    PointBox[NCache[{-5 + 4 2^Rational[1, 2], 5 + 4 2^Rational[1, 2]}, {
      0.6568542494923806, 10.65685424949238}]], 
    PointBox[NCache[{-5 + 3 2^Rational[1, 2], 5 + 
       3 2^Rational[1, 2]}, {-0.7573593128807143, 9.242640687119286}]], 
    PointBox[NCache[{-5 + 2 2^Rational[1, 2], 5 + 
       2 2^Rational[1, 2]}, {-2.1715728752538097`, 7.82842712474619}]], 
    PointBox[
     NCache[{-5 + 2^Rational[1, 2], 5 + 
       2^Rational[1, 2]}, {-3.585786437626905, 6.414213562373095}]], 
    PointBox[{-5, 5}], 
    PointBox[NCache[{-5 - 2^Rational[1, 2], 5 - 2^
       Rational[1, 2]}, {-6.414213562373095, 3.585786437626905}]], 
    PointBox[NCache[{-5 - 2 2^Rational[1, 2], 5 - 2 
       2^Rational[1, 2]}, {-7.82842712474619, 2.1715728752538097`}]], 
    PointBox[NCache[{-5 - 3 2^Rational[1, 2], 5 - 3 
       2^Rational[1, 2]}, {-9.242640687119286, 0.7573593128807143}]], 
    PointBox[NCache[{-5 - 4 2^Rational[1, 2], 5 - 4 
       2^Rational[1, 2]}, {-10.65685424949238, -0.6568542494923806}]], 
    PointBox[NCache[{-5 - 5 2^Rational[1, 2], 5 - 5 
       2^Rational[1, 2]}, {-12.071067811865476`, -2.0710678118654755`}]], 
    PointBox[NCache[{-5 - 6 2^Rational[1, 2], 5 - 6 
       2^Rational[1, 2]}, {-13.485281374238571`, -3.4852813742385713`}]], 
    PointBox[NCache[{-5 - 7 2^Rational[1, 2], 5 - 7 
       2^Rational[1, 2]}, {-14.899494936611665`, -4.899494936611665}]], 
    PointBox[NCache[{-5 - 8 2^Rational[1, 2], 5 - 8 
       2^Rational[1, 2]}, {-16.31370849898476, -6.313708498984761}]], 
    PointBox[NCache[{-5 - 9 2^Rational[1, 2], 5 - 9 
       2^Rational[1, 2]}, {-17.72792206135786, -7.727922061357857}]], 
    PointBox[NCache[{-5 - 10 2^Rational[1, 2], 5 - 10 
       2^Rational[1, 2]}, {-19.14213562373095, -9.142135623730951}]]}, {
    PointBox[NCache[{-6 + 10 2^Rational[1, 2], 6 + 10 2^Rational[1, 2]}, {
      8.142135623730951, 20.14213562373095}]], 
    PointBox[NCache[{-6 + 9 2^Rational[1, 2], 6 + 9 2^Rational[1, 2]}, {
      6.727922061357857, 18.72792206135786}]], 
    PointBox[NCache[{-6 + 8 2^Rational[1, 2], 6 + 8 2^Rational[1, 2]}, {
      5.313708498984761, 17.31370849898476}]], 
    PointBox[NCache[{-6 + 7 2^Rational[1, 2], 6 + 7 2^Rational[1, 2]}, {
      3.8994949366116654`, 15.899494936611665`}]], 
    PointBox[NCache[{-6 + 6 2^Rational[1, 2], 6 + 6 2^Rational[1, 2]}, {
      2.4852813742385713`, 14.485281374238571`}]], 
    PointBox[NCache[{-6 + 5 2^Rational[1, 2], 6 + 5 2^Rational[1, 2]}, {
      1.0710678118654755`, 13.071067811865476`}]], 
    PointBox[NCache[{-6 + 4 2^Rational[1, 2], 6 + 
       4 2^Rational[1, 2]}, {-0.3431457505076194, 11.65685424949238}]], 
    PointBox[NCache[{-6 + 3 2^Rational[1, 2], 6 + 
       3 2^Rational[1, 2]}, {-1.7573593128807143`, 10.242640687119286`}]], 
    PointBox[NCache[{-6 + 2 2^Rational[1, 2], 6 + 
       2 2^Rational[1, 2]}, {-3.1715728752538097`, 8.82842712474619}]], 
    PointBox[NCache[{-6 + 2^Rational[1, 2], 6 + 
       2^Rational[1, 2]}, {-4.585786437626905, 7.414213562373095}]], 
    PointBox[{-6, 6}], 
    PointBox[NCache[{-6 - 2^Rational[1, 2], 6 - 2^
       Rational[1, 2]}, {-7.414213562373095, 4.585786437626905}]], 
    PointBox[NCache[{-6 - 2 2^Rational[1, 2], 6 - 2 
       2^Rational[1, 2]}, {-8.82842712474619, 3.1715728752538097`}]], 
    PointBox[NCache[{-6 - 3 2^Rational[1, 2], 6 - 3 
       2^Rational[1, 2]}, {-10.242640687119286`, 1.7573593128807143`}]], 
    PointBox[NCache[{-6 - 4 2^Rational[1, 2], 6 - 4 
       2^Rational[1, 2]}, {-11.65685424949238, 0.3431457505076194}]], 
    PointBox[NCache[{-6 - 5 2^Rational[1, 2], 6 - 5 
       2^Rational[1, 2]}, {-13.071067811865476`, -1.0710678118654755`}]], 
    PointBox[NCache[{-6 - 6 2^Rational[1, 2], 6 - 6 
       2^Rational[1, 2]}, {-14.485281374238571`, -2.4852813742385713`}]], 
    PointBox[NCache[{-6 - 7 2^Rational[1, 2], 6 - 7 
       2^Rational[1, 2]}, {-15.899494936611665`, -3.8994949366116654`}]], 
    PointBox[NCache[{-6 - 8 2^Rational[1, 2], 6 - 8 
       2^Rational[1, 2]}, {-17.31370849898476, -5.313708498984761}]], 
    PointBox[NCache[{-6 - 9 2^Rational[1, 2], 6 - 9 
       2^Rational[1, 2]}, {-18.72792206135786, -6.727922061357857}]], 
    PointBox[NCache[{-6 - 10 2^Rational[1, 2], 6 - 10 
       2^Rational[1, 2]}, {-20.14213562373095, -8.142135623730951}]]}, {
    PointBox[NCache[{-7 + 10 2^Rational[1, 2], 7 + 10 2^Rational[1, 2]}, {
      7.142135623730951, 21.14213562373095}]], 
    PointBox[NCache[{-7 + 9 2^Rational[1, 2], 7 + 9 2^Rational[1, 2]}, {
      5.727922061357857, 19.72792206135786}]], 
    PointBox[NCache[{-7 + 8 2^Rational[1, 2], 7 + 8 2^Rational[1, 2]}, {
      4.313708498984761, 18.31370849898476}]], 
    PointBox[NCache[{-7 + 7 2^Rational[1, 2], 7 + 7 2^Rational[1, 2]}, {
      2.8994949366116654`, 16.899494936611667`}]], 
    PointBox[NCache[{-7 + 6 2^Rational[1, 2], 7 + 6 2^Rational[1, 2]}, {
      1.4852813742385713`, 15.485281374238571`}]], 
    PointBox[NCache[{-7 + 5 2^Rational[1, 2], 7 + 5 2^Rational[1, 2]}, {
      0.0710678118654755, 14.071067811865476`}]], 
    PointBox[NCache[{-7 + 4 2^Rational[1, 2], 7 + 
       4 2^Rational[1, 2]}, {-1.3431457505076194`, 12.65685424949238}]], 
    PointBox[NCache[{-7 + 3 2^Rational[1, 2], 7 + 
       3 2^Rational[1, 2]}, {-2.7573593128807143`, 11.242640687119286`}]], 
    PointBox[NCache[{-7 + 2 2^Rational[1, 2], 7 + 
       2 2^Rational[1, 2]}, {-4.17157287525381, 9.82842712474619}]], 
    PointBox[NCache[{-7 + 2^Rational[1, 2], 7 + 
       2^Rational[1, 2]}, {-5.585786437626905, 8.414213562373096}]], 
    PointBox[{-7, 7}], 
    PointBox[NCache[{-7 - 2^Rational[1, 2], 7 - 2^
       Rational[1, 2]}, {-8.414213562373096, 5.585786437626905}]], 
    PointBox[NCache[{-7 - 2 2^Rational[1, 2], 7 - 2 
       2^Rational[1, 2]}, {-9.82842712474619, 4.17157287525381}]], 
    PointBox[NCache[{-7 - 3 2^Rational[1, 2], 7 - 3 
       2^Rational[1, 2]}, {-11.242640687119286`, 2.7573593128807143`}]], 
    PointBox[NCache[{-7 - 4 2^Rational[1, 2], 7 - 4 
       2^Rational[1, 2]}, {-12.65685424949238, 1.3431457505076194`}]], 
    PointBox[NCache[{-7 - 5 2^Rational[1, 2], 7 - 5 
       2^Rational[1, 2]}, {-14.071067811865476`, -0.0710678118654755}]], 
    PointBox[NCache[{-7 - 6 2^Rational[1, 2], 7 - 6 
       2^Rational[1, 2]}, {-15.485281374238571`, -1.4852813742385713`}]], 
    PointBox[NCache[{-7 - 7 2^Rational[1, 2], 7 - 7 
       2^Rational[1, 2]}, {-16.899494936611667`, -2.8994949366116654`}]], 
    PointBox[NCache[{-7 - 8 2^Rational[1, 2], 7 - 8 
       2^Rational[1, 2]}, {-18.31370849898476, -4.313708498984761}]], 
    PointBox[NCache[{-7 - 9 2^Rational[1, 2], 7 - 9 
       2^Rational[1, 2]}, {-19.72792206135786, -5.727922061357857}]], 
    PointBox[NCache[{-7 - 10 2^Rational[1, 2], 7 - 10 
       2^Rational[1, 2]}, {-21.14213562373095, -7.142135623730951}]]}, {
    PointBox[NCache[{-8 + 10 2^Rational[1, 2], 8 + 10 2^Rational[1, 2]}, {
      6.142135623730951, 22.14213562373095}]], 
    PointBox[NCache[{-8 + 9 2^Rational[1, 2], 8 + 9 2^Rational[1, 2]}, {
      4.727922061357857, 20.72792206135786}]], 
    PointBox[NCache[{-8 + 8 2^Rational[1, 2], 8 + 8 2^Rational[1, 2]}, {
      3.313708498984761, 19.31370849898476}]], 
    PointBox[NCache[{-8 + 7 2^Rational[1, 2], 8 + 7 2^Rational[1, 2]}, {
      1.8994949366116654`, 17.899494936611667`}]], 
    PointBox[NCache[{-8 + 6 2^Rational[1, 2], 8 + 6 2^Rational[1, 2]}, {
      0.4852813742385713, 16.48528137423857}]], 
    PointBox[NCache[{-8 + 5 2^Rational[1, 2], 8 + 
       5 2^Rational[1, 2]}, {-0.9289321881345245, 15.071067811865476`}]], 
    PointBox[NCache[{-8 + 4 2^Rational[1, 2], 8 + 
       4 2^Rational[1, 2]}, {-2.3431457505076194`, 13.65685424949238}]], 
    PointBox[NCache[{-8 + 3 2^Rational[1, 2], 8 + 
       3 2^Rational[1, 2]}, {-3.7573593128807143`, 12.242640687119286`}]], 
    PointBox[NCache[{-8 + 2 2^Rational[1, 2], 8 + 
       2 2^Rational[1, 2]}, {-5.17157287525381, 10.82842712474619}]], 
    PointBox[NCache[{-8 + 2^Rational[1, 2], 8 + 
       2^Rational[1, 2]}, {-6.585786437626905, 9.414213562373096}]], 
    PointBox[{-8, 8}], 
    PointBox[NCache[{-8 - 2^Rational[1, 2], 8 - 2^
       Rational[1, 2]}, {-9.414213562373096, 6.585786437626905}]], 
    PointBox[NCache[{-8 - 2 2^Rational[1, 2], 8 - 2 
       2^Rational[1, 2]}, {-10.82842712474619, 5.17157287525381}]], 
    PointBox[NCache[{-8 - 3 2^Rational[1, 2], 8 - 3 
       2^Rational[1, 2]}, {-12.242640687119286`, 3.7573593128807143`}]], 
    PointBox[NCache[{-8 - 4 2^Rational[1, 2], 8 - 4 
       2^Rational[1, 2]}, {-13.65685424949238, 2.3431457505076194`}]], 
    PointBox[NCache[{-8 - 5 2^Rational[1, 2], 8 - 5 
       2^Rational[1, 2]}, {-15.071067811865476`, 0.9289321881345245}]], 
    PointBox[NCache[{-8 - 6 2^Rational[1, 2], 8 - 6 
       2^Rational[1, 2]}, {-16.48528137423857, -0.4852813742385713}]], 
    PointBox[NCache[{-8 - 7 2^Rational[1, 2], 8 - 7 
       2^Rational[1, 2]}, {-17.899494936611667`, -1.8994949366116654`}]], 
    PointBox[NCache[{-8 - 8 2^Rational[1, 2], 8 - 8 
       2^Rational[1, 2]}, {-19.31370849898476, -3.313708498984761}]], 
    PointBox[
     NCache[{-8 - 9 2^Rational[1, 2], 8 - 9 
       2^Rational[1, 2]}, {-20.72792206135786, -4.727922061357857}]], 
    PointBox[NCache[{-8 - 10 2^Rational[1, 2], 8 - 10 
       2^Rational[1, 2]}, {-22.14213562373095, -6.142135623730951}]]}, {
    PointBox[NCache[{-9 + 10 2^Rational[1, 2], 9 + 10 2^Rational[1, 2]}, {
      5.142135623730951, 23.14213562373095}]], 
    PointBox[NCache[{-9 + 9 2^Rational[1, 2], 9 + 9 2^Rational[1, 2]}, {
      3.727922061357857, 21.72792206135786}]], 
    PointBox[NCache[{-9 + 8 2^Rational[1, 2], 9 + 8 2^Rational[1, 2]}, {
      2.313708498984761, 20.31370849898476}]], 
    PointBox[NCache[{-9 + 7 2^Rational[1, 2], 9 + 7 2^Rational[1, 2]}, {
      0.8994949366116654, 18.899494936611667`}]], 
    PointBox[NCache[{-9 + 6 2^Rational[1, 2], 9 + 
       6 2^Rational[1, 2]}, {-0.5147186257614287, 17.48528137423857}]], 
    PointBox[NCache[{-9 + 5 2^Rational[1, 2], 9 + 
       5 2^Rational[1, 2]}, {-1.9289321881345245`, 16.071067811865476`}]], 
    PointBox[NCache[{-9 + 4 2^Rational[1, 2], 9 + 
       4 2^Rational[1, 2]}, {-3.3431457505076194`, 14.65685424949238}]], 
    PointBox[NCache[{-9 + 3 2^Rational[1, 2], 9 + 
       3 2^Rational[1, 2]}, {-4.757359312880714, 13.242640687119286`}]], 
    PointBox[NCache[{-9 + 2 2^Rational[1, 2], 9 + 
       2 2^Rational[1, 2]}, {-6.17157287525381, 11.82842712474619}]], 
    PointBox[NCache[{-9 + 2^Rational[1, 2], 9 + 
       2^Rational[1, 2]}, {-7.585786437626905, 10.414213562373096`}]], 
    PointBox[{-9, 9}], 
    PointBox[NCache[{-9 - 2^Rational[1, 2], 9 - 2^
       Rational[1, 2]}, {-10.414213562373096`, 7.585786437626905}]], 
    PointBox[NCache[{-9 - 2 2^Rational[1, 2], 9 - 2 
       2^Rational[1, 2]}, {-11.82842712474619, 6.17157287525381}]], 
    PointBox[NCache[{-9 - 3 2^Rational[1, 2], 9 - 3 
       2^Rational[1, 2]}, {-13.242640687119286`, 4.757359312880714}]], 
    PointBox[NCache[{-9 - 4 2^Rational[1, 2], 9 - 4 
       2^Rational[1, 2]}, {-14.65685424949238, 3.3431457505076194`}]], 
    PointBox[NCache[{-9 - 5 2^Rational[1, 2], 9 - 5 
       2^Rational[1, 2]}, {-16.071067811865476`, 1.9289321881345245`}]], 
    PointBox[NCache[{-9 - 6 2^Rational[1, 2], 9 - 6 
       2^Rational[1, 2]}, {-17.48528137423857, 0.5147186257614287}]], 
    PointBox[NCache[{-9 - 7 2^Rational[1, 2], 9 - 7 
       2^Rational[1, 2]}, {-18.899494936611667`, -0.8994949366116654}]], 
    PointBox[NCache[{-9 - 8 2^Rational[1, 2], 9 - 8 
       2^Rational[1, 2]}, {-20.31370849898476, -2.313708498984761}]], 
    PointBox[NCache[{-9 - 9 2^Rational[1, 2], 9 - 9 
       2^Rational[1, 2]}, {-21.72792206135786, -3.727922061357857}]], 
    PointBox[NCache[{-9 - 10 2^Rational[1, 2], 9 - 10 
       2^Rational[1, 2]}, {-23.14213562373095, -5.142135623730951}]]}, {
    PointBox[NCache[{-10 + 10 2^Rational[1, 2], 10 + 10 2^Rational[1, 2]}, {
      4.142135623730951, 24.14213562373095}]], 
    PointBox[NCache[{-10 + 9 2^Rational[1, 2], 10 + 9 2^Rational[1, 2]}, {
      2.727922061357857, 22.72792206135786}]], 
    PointBox[NCache[{-10 + 8 2^Rational[1, 2], 10 + 8 2^Rational[1, 2]}, {
      1.3137084989847612`, 21.31370849898476}]], 
    PointBox[NCache[{-10 + 7 2^Rational[1, 2], 10 + 
       7 2^Rational[1, 2]}, {-0.10050506338833465`, 19.899494936611667`}]], 
    PointBox[NCache[{-10 + 6 2^Rational[1, 2], 10 + 
       6 2^Rational[1, 2]}, {-1.5147186257614287`, 18.48528137423857}]], 
    PointBox[NCache[{-10 + 5 2^Rational[1, 2], 10 + 
       5 2^Rational[1, 2]}, {-2.9289321881345245`, 17.071067811865476`}]], 
    PointBox[NCache[{-10 + 4 2^Rational[1, 2], 10 + 
       4 2^Rational[1, 2]}, {-4.343145750507619, 15.65685424949238}]], 
    PointBox[NCache[{-10 + 3 2^Rational[1, 2], 10 + 
       3 2^Rational[1, 2]}, {-5.757359312880714, 14.242640687119286`}]], 
    PointBox[NCache[{-10 + 2 2^Rational[1, 2], 10 + 
       2 2^Rational[1, 2]}, {-7.17157287525381, 12.82842712474619}]], 
    PointBox[NCache[{-10 + 2^Rational[1, 2], 10 + 
       2^Rational[1, 2]}, {-8.585786437626904, 11.414213562373096`}]], 
    PointBox[{-10, 10}], 
    PointBox[NCache[{-10 - 2^Rational[1, 2], 10 - 2^
       Rational[1, 2]}, {-11.414213562373096`, 8.585786437626904}]], 
    PointBox[NCache[{-10 - 2 2^Rational[1, 2], 10 - 2 
       2^Rational[1, 2]}, {-12.82842712474619, 7.17157287525381}]], 
    PointBox[
     NCache[{-10 - 3 2^Rational[1, 2], 10 - 3 
       2^Rational[1, 2]}, {-14.242640687119286`, 5.757359312880714}]], 
    PointBox[NCache[{-10 - 4 2^Rational[1, 2], 10 - 4 
       2^Rational[1, 2]}, {-15.65685424949238, 4.343145750507619}]], 
    PointBox[NCache[{-10 - 5 2^Rational[1, 2], 10 - 5 
       2^Rational[1, 2]}, {-17.071067811865476`, 2.9289321881345245`}]], 
    PointBox[NCache[{-10 - 6 2^Rational[1, 2], 10 - 6 
       2^Rational[1, 2]}, {-18.48528137423857, 1.5147186257614287`}]], 
    PointBox[NCache[{-10 - 7 2^Rational[1, 2], 10 - 7 
       2^Rational[1, 2]}, {-19.899494936611667`, 0.10050506338833465`}]], 
    PointBox[NCache[{-10 - 8 2^Rational[1, 2], 10 - 8 
       2^Rational[1, 2]}, {-21.31370849898476, -1.3137084989847612`}]], 
    PointBox[NCache[{-10 - 9 2^Rational[1, 2], 10 - 9 
       2^Rational[1, 2]}, {-22.72792206135786, -2.727922061357857}]], 
    PointBox[NCache[{-10 - 10 2^Rational[1, 2], 10 - 10 
       2^Rational[1, 2]}, {-24.14213562373095, -4.142135623730951}]]}},
  PlotRange->8]], "Output",
 CellChangeTimes->{3.942168292106595*^9},
 CellLabel->
  "Out[2948]=",ExpressionUUID->"2e03942b-d440-445a-97a1-f0a4cfc03269"]
}, Open  ]],

Cell["\<\
And the corresponding tiling by copies of the fundamental domain:\
\>", "Text",
 CellChangeTimes->{{3.942168250386967*^9, 
  3.9421682582038393`*^9}},ExpressionUUID->"40907a3a-ddd6-43e3-b0ab-\
48ebda37107d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", ".005", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"InfiniteLine", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"P", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "y"}], "}"}]}], ",", 
          RowBox[{"P", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "y"}], "}"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"InfiniteLine", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"P", ".", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0"}], "}"}]}], ",", 
          RowBox[{"P", ".", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1"}], "}"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "8"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.942166422758671*^9, 3.942166498112551*^9}},
 CellLabel->
  "In[2930]:=",ExpressionUUID->"2ff2deb5-5b7a-46bd-a8be-355621c1e2e0"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.005], {
    TagBox[
     ConicHullRegionBox[
      NCache[{{10 2^Rational[1, 2], 10 2^Rational[1, 2]}, {-1 + 
         10 2^Rational[1, 2], 1 + 10 2^Rational[1, 2]}}, {{
       14.142135623730951`, 14.142135623730951`}, {13.142135623730951`, 
       15.142135623730951`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{9 2^Rational[1, 2], 9 2^Rational[1, 2]}, {-1 + 
         9 2^Rational[1, 2], 1 + 9 2^Rational[1, 2]}}, {{12.727922061357857`, 
       12.727922061357857`}, {11.727922061357857`, 13.727922061357857`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{8 2^Rational[1, 2], 8 2^Rational[1, 2]}, {-1 + 
         8 2^Rational[1, 2], 1 + 8 2^Rational[1, 2]}}, {{11.313708498984761`, 
       11.313708498984761`}, {10.313708498984761`, 12.313708498984761`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{7 2^Rational[1, 2], 7 2^Rational[1, 2]}, {-1 + 
         7 2^Rational[1, 2], 1 + 7 2^Rational[1, 2]}}, {{9.899494936611665, 
       9.899494936611665}, {8.899494936611665, 10.899494936611665`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{6 2^Rational[1, 2], 6 2^Rational[1, 2]}, {-1 + 
         6 2^Rational[1, 2], 1 + 6 2^Rational[1, 2]}}, {{8.485281374238571, 
       8.485281374238571}, {7.485281374238571, 9.485281374238571}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{5 2^Rational[1, 2], 5 2^Rational[1, 2]}, {-1 + 
         5 2^Rational[1, 2], 1 + 5 2^Rational[1, 2]}}, {{7.0710678118654755`, 
       7.0710678118654755`}, {6.0710678118654755`, 8.071067811865476}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {-1 + 
         4 2^Rational[1, 2], 1 + 4 2^Rational[1, 2]}}, {{5.656854249492381, 
       5.656854249492381}, {4.656854249492381, 6.656854249492381}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{3 2^Rational[1, 2], 3 2^Rational[1, 2]}, {-1 + 
         3 2^Rational[1, 2], 1 + 3 2^Rational[1, 2]}}, {{4.242640687119286, 
       4.242640687119286}, {3.2426406871192857`, 5.242640687119286}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{2 2^Rational[1, 2], 2 2^Rational[1, 2]}, {-1 + 
         2 2^Rational[1, 2], 1 + 2 2^Rational[1, 2]}}, {{2.8284271247461903`, 
       2.8284271247461903`}, {1.8284271247461903`, 3.8284271247461903`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{2^Rational[1, 2], 2^Rational[1, 2]}, {-1 + 2^Rational[1, 2], 1 + 
         2^Rational[1, 2]}}, {{1.4142135623730951`, 1.4142135623730951`}, {
       0.41421356237309515`, 2.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{{0, 0}, {-1, 1}}],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-2^Rational[1, 2], -2^Rational[1, 2]}, {-1 - 2^Rational[1, 2], 
         1 - 2^Rational[
          1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`}, \
{-2.414213562373095, -0.41421356237309515`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-2) 2^Rational[1, 2], (-2) 2^Rational[1, 2]}, {-1 - 2 
         2^Rational[1, 2], 1 - 2 
         2^Rational[
           1, 2]}}, {{-2.8284271247461903`, -2.8284271247461903`}, \
{-3.8284271247461903`, -1.8284271247461903`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-3) 2^Rational[1, 2], (-3) 2^Rational[1, 2]}, {-1 - 3 
         2^Rational[1, 2], 1 - 3 
         2^Rational[
           1, 2]}}, {{-4.242640687119286, -4.242640687119286}, \
{-5.242640687119286, -3.2426406871192857`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-4) 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {-1 - 4 
         2^Rational[1, 2], 1 - 4 
         2^Rational[
           1, 2]}}, {{-5.656854249492381, -5.656854249492381}, \
{-6.656854249492381, -4.656854249492381}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-5) 2^Rational[1, 2], (-5) 2^Rational[1, 2]}, {-1 - 5 
         2^Rational[1, 2], 1 - 5 
         2^Rational[
           1, 2]}}, {{-7.0710678118654755`, -7.0710678118654755`}, \
{-8.071067811865476, -6.0710678118654755`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-6) 2^Rational[1, 2], (-6) 2^Rational[1, 2]}, {-1 - 6 
         2^Rational[1, 2], 1 - 6 
         2^Rational[
           1, 2]}}, {{-8.485281374238571, -8.485281374238571}, \
{-9.485281374238571, -7.485281374238571}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-7) 2^Rational[1, 2], (-7) 2^Rational[1, 2]}, {-1 - 7 
         2^Rational[1, 2], 1 - 7 
         2^Rational[
           1, 2]}}, {{-9.899494936611665, -9.899494936611665}, \
{-10.899494936611665`, -8.899494936611665}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-8) 2^Rational[1, 2], (-8) 2^Rational[1, 2]}, {-1 - 8 
         2^Rational[1, 2], 1 - 8 
         2^Rational[
           1, 2]}}, {{-11.313708498984761`, -11.313708498984761`}, \
{-12.313708498984761`, -10.313708498984761`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-9) 2^Rational[1, 2], (-9) 2^Rational[1, 2]}, {-1 - 9 
         2^Rational[1, 2], 1 - 9 
         2^Rational[
           1, 2]}}, {{-12.727922061357857`, -12.727922061357857`}, \
{-13.727922061357857`, -11.727922061357857`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{(-10) 2^Rational[1, 2], (-10) 2^Rational[1, 2]}, {-1 - 10 
         2^Rational[1, 2], 1 - 10 
         2^Rational[
           1, 2]}}, {{-14.142135623730951`, -14.142135623730951`}, \
{-15.142135623730951`, -13.142135623730951`}}]],
     "InfiniteLine"]}, {
    TagBox[
     ConicHullRegionBox[
      NCache[{{10, -10}, {10 - 2^Rational[1, 2], -10 - 2^Rational[1, 2]}}, {{
        10, -10}, {8.585786437626904, -11.414213562373096`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{9, -9}, {9 - 2^Rational[1, 2], -9 - 2^Rational[1, 2]}}, {{
        9, -9}, {7.585786437626905, -10.414213562373096`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{8, -8}, {8 - 2^Rational[1, 2], -8 - 2^Rational[1, 2]}}, {{
        8, -8}, {6.585786437626905, -9.414213562373096}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{7, -7}, {7 - 2^Rational[1, 2], -7 - 2^Rational[1, 2]}}, {{
        7, -7}, {5.585786437626905, -8.414213562373096}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{6, -6}, {6 - 2^Rational[1, 2], -6 - 2^Rational[1, 2]}}, {{
        6, -6}, {4.585786437626905, -7.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{5, -5}, {5 - 2^Rational[1, 2], -5 - 2^Rational[1, 2]}}, {{
        5, -5}, {3.585786437626905, -6.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{4, -4}, {4 - 2^Rational[1, 2], -4 - 2^Rational[1, 2]}}, {{
        4, -4}, {2.585786437626905, -5.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{3, -3}, {3 - 2^Rational[1, 2], -3 - 2^Rational[1, 2]}}, {{
        3, -3}, {1.5857864376269049`, -4.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{2, -2}, {2 - 2^Rational[1, 2], -2 - 2^Rational[1, 2]}}, {{
        2, -2}, {0.5857864376269049, -3.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{1, -1}, {1 - 2^Rational[1, 2], -1 - 2^Rational[1, 2]}}, {{
        1, -1}, {-0.41421356237309515`, -2.414213562373095}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{0, 0}, {-2^Rational[1, 2], -2^Rational[1, 2]}}, {{0, 
        0}, {-1.4142135623730951`, -1.4142135623730951`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-1, 1}, {-1 - 2^Rational[1, 2], 1 - 2^Rational[1, 2]}}, {{-1, 
        1}, {-2.414213562373095, -0.41421356237309515`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-2, 2}, {-2 - 2^Rational[1, 2], 2 - 2^Rational[1, 2]}}, {{-2, 
        2}, {-3.414213562373095, 0.5857864376269049}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-3, 3}, {-3 - 2^Rational[1, 2], 3 - 2^Rational[1, 2]}}, {{-3, 
        3}, {-4.414213562373095, 1.5857864376269049`}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-4, 4}, {-4 - 2^Rational[1, 2], 4 - 2^Rational[1, 2]}}, {{-4, 
        4}, {-5.414213562373095, 2.585786437626905}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-5, 5}, {-5 - 2^Rational[1, 2], 5 - 2^Rational[1, 2]}}, {{-5, 
        5}, {-6.414213562373095, 3.585786437626905}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-6, 6}, {-6 - 2^Rational[1, 2], 6 - 2^Rational[1, 2]}}, {{-6, 
        6}, {-7.414213562373095, 4.585786437626905}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-7, 7}, {-7 - 2^Rational[1, 2], 7 - 2^Rational[1, 2]}}, {{-7, 
        7}, {-8.414213562373096, 5.585786437626905}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-8, 8}, {-8 - 2^Rational[1, 2], 8 - 2^Rational[1, 2]}}, {{-8, 
        8}, {-9.414213562373096, 6.585786437626905}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-9, 9}, {-9 - 2^Rational[1, 2], 9 - 2^Rational[1, 2]}}, {{-9, 
        9}, {-10.414213562373096`, 7.585786437626905}}]],
     "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[
      NCache[{{-10, 
        10}, {-10 - 2^Rational[1, 2], 10 - 2^Rational[1, 2]}}, {{-10, 
        10}, {-11.414213562373096`, 8.585786437626904}}]],
     "InfiniteLine"]}},
  PlotRange->8]], "Output",
 CellChangeTimes->{{3.942166464714257*^9, 3.9421664988240843`*^9}},
 CellLabel->
  "Out[2930]=",ExpressionUUID->"2ade16c3-9813-450c-afac-083cb7b0e94b"]
}, Open  ]],

Cell[TextData[{
 "Now, if we act by matrices of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       SuperscriptBox["e", "s"], "0"},
      {"0", 
       SuperscriptBox["e", 
        RowBox[{"-", "s"}]]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "5e9f0a9c-71b3-4574-a9bc-3a6bb2b144a7"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "\[Element]", "\[DoubleStruckCapitalR]"}], TraditionalForm]],
  ExpressionUUID->"1727dc72-db7c-4369-89bb-bdc9f3777978"],
 ", we get a parametrized family of lattices ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "s"], TraditionalForm]],ExpressionUUID->
  "441fc2ca-d1cc-41bd-99df-e4665cfa7829"],
 " whose points are of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SuperscriptBox["e", "s"], "0"},
       {"0", 
        SuperscriptBox["e", 
         RowBox[{"-", "s"}]]}
      }], ")"}], 
    RowBox[{"P", "(", GridBox[{
       {"x"},
       {"y"}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "9d8cdddd-15f8-4853-8abf-f0555056e33c"],
 ", and this turns out to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    RowBox[{"ln", "(", 
     RowBox[{"1", "+", 
      SqrtBox["2"]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "67a6ac58-dbd1-4e71-abbe-314286340faa"],
 "-periodic:"
}], "Text",
 CellChangeTimes->{{3.9421665305278597`*^9, 
  3.942166668146616*^9}},ExpressionUUID->"7c8f2752-765b-40bb-98f2-\
3a3f74a61a89"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ct", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Log", "[", 
     FractionBox[
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "x", " ", "y"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["y", "2"]}]}]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "x", " ", "y"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["y", "2"]}]}]]], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"M", ",", "pts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pts", "=", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Quiet", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", 
                RowBox[{"-", "30"}], ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   SuperscriptBox["E", 
                    RowBox[{"ct", "[", "#", "]"}]], ",", 
                   SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"ct", "[", "#", "]"}]}]]}], "}"}], "]"}], ".", 
                "P", ".", "#"}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<=", "8"}], "&"}]}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Animate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"M", "=", 
        RowBox[{
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["E", "s"], ",", 
            SuperscriptBox["E", 
             RowBox[{"-", "s"}]]}], "}"}], "]"}], ".", "P"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", ".005", "]"}], ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"M", ".", "#"}], "]"}], "&"}], "/@", "pts"}]}], "}"}], 
         ",", 
         RowBox[{"PlotRange", "->", "8"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", 
        RowBox[{"2", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           SqrtBox["2"]}], "]"}]}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{
  3.956848782897924*^9},ExpressionUUID->"022ff354-38d6-48fd-9cf1-\
27981e31a983"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`M$$ = 
  Dot[{{2.8621685775654138`, 0.}, {0., 
   0.34938543027769836`}}, $CellContext`P], $CellContext`pts$$ = \
CompressedData["
1:eJxdlwtO20AURcf/sZ0/CX+QuqUuoQtoF9pdtKWlhQAJIYkhsctVzpNGII0O
fnPvux5/ksmnL98+f42dc98j58QfXdfdvQ9x9n78k2PxHk6pa/4XdXEOj6hL
d0P9hvpvjsUHOKGu+T/UxUc4pi7dLfVb6n85Fp/giLrm/1EXF3BIXbo76uIS
DqhLd8/8PfPiM+wzP4DSz9HN0c3RzdE9UBdXsEddukfmH5kXX2DNfA9K/4Tu
CZ24hhXzNZRvgX6BfoFe3MASXQVrKP8S3xLfEt8S3xLfEt8zumd04hZ65kso
3wr9Cv0KvdjAAp2HJZT/Bd8Lvhd84ivM0RXQQ/VZ41/jX+Nf4xffYIY+hwX0
UP029NnQZ0OfDX3EHdzDBF8KM5jDAipnS98tfbf03dJ3S1+xhR10+CMYwwSm
MIM5VH5DbkNuQ25DbkNuQ25DbkNuQ25DbkNuQ25DbkNuQ+5rkGnjDe7gHraw
gw5/BGOYwBRmMIfKfQuybOzgHrawgw5fBGOYwBRmUHm2hl2QYWMPW9hBhy+C
MUxgCjOoHLtGdu77IMNGCzvo8EUwhglMYQaVY9fEzrkNetvooEMfwRgmMIXq
b9fYroGdYxf0tD+HPoIxTGAK1dfumV1TW7Odm/USI/QxTGAKMzT2DNg9smvY
BudkvaJgxDCBKcyYs2fK7rndkzZYo51bHPS0kcAUZtTsnbBn1Z4lu9dtcO1s
zXaOSdDbRgqtf07N3jl7F+xZtWepDe6NXVO7BnbOaZBhI4M5/9s7be+avQv2
rIbPlD0Ddu/sWtu5Z0GGjZxhn1X22RG+0/bO2TuRk5eTl5OXk5d/uFb5hyyN
ghF+NtpnVUFuQW5BbkFuQW5BbkFuQW5BbkFu8SHTk+vJ9eR6cj25nlxPrifX
k+vJ9eR6cj25nlxPrr5T9R1Ukl+SX5Jfkl+SX9K3pG9J35K+ZdBXGdpD6Lu1
IqcipyKnIqeiT0Wfij5V0Ec9a/rV9KvpV9Ovxl/jr/HX+LXn0l6iR58efXr0
6eHr4esFPp1DH38ffx9/H30ffR+99qjaCw3wDfAN0A0Cnc5Re17tvYb4hviG
+Ib4hviGgU/nOMI/wj/CP0I/Qj9Crz299opjfGN8Y3TjQKc1TdBP0E+YnzCv
3xzaqx6hOwrqWqN+w2jvO0U3RTdFNw10WtMM/Qz9jPkZ88fusBc/Rncc1LXG
E3fY25+gOwnqWtMp86ccn7nDb4cz6mdBXWs8d4ffHufozoO61njB/AXHl+7w
W+aS+mVQ1xqv3OG30RW6q6CuNV4zf82x/f0HCZnxpg==
  "]}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`s$$ = 0.13231850275357615`, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`s$$], 0, 2 Log[1 + 2^Rational[1, 2]], ControlType -> 
       Animator}}, Typeset`size$$ = {450., {222., 228.}}, Typeset`update$$ = 
     0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`s$$ = 0}, 
       "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`M$$ = Dot[
           
           DiagonalMatrix[{
            E^$CellContext`s$$, E^(-$CellContext`s$$)}], $CellContext`P]; 
        Graphics[{
           Thickness[0.005], 
           PointSize[Large], 
           Map[Point[
             Dot[$CellContext`M$$, #]]& , $CellContext`pts$$]}, PlotRange -> 
          8]), "Specifications" :> {{$CellContext`s$$, 0, 2 
          Log[1 + 2^Rational[1, 2]], 
          AppearanceElements -> {
           "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
            "DirectionButton"}}}, 
       "Options" :> {
        ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
         "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
         True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
      ImageSizeCache->{504., {266., 274.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Animate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.942166751243515*^9, {3.942166854069784*^9, 3.942166894451991*^9}, {
   3.942166948261992*^9, 3.942166964261775*^9}, {3.942166994931629*^9, 
   3.9421670666311502`*^9}, {3.956848604086615*^9, 3.956848615521308*^9}, 
   3.9568486625952783`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3ac86db5-22cf-4066-a38a-ff99298adf4e"]
}, Open  ]],

Cell[TextData[{
 "Now we download the ",
 StyleBox["seasons", "Input"],
 " color palette from Ellert van der Velden\[CloseCurlyQuote]s ",
 ButtonBox["CMasher",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/1313e/CMasher"], None},
  ButtonNote->"https://github.com/1313e/CMasher"],
 ":"
}], "Text",
 CellChangeTimes->{{3.942167113919154*^9, 3.942167152230472*^9}, {
  3.942167187187773*^9, 3.942167214047514*^9}, {3.942168334330593*^9, 
  3.9421683379760847`*^9}, {3.956853811050542*^9, 3.9568538513323402`*^9}, {
  3.9568538872878838`*^9, 
  3.956853898918367*^9}},ExpressionUUID->"e0a959c0-cdb0-4e41-be0b-\
5478f6fedc8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cols", "=", 
   RowBox[{"RGBColor", "/@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://raw.githubusercontent.com/1313e/CMasher/refs/heads/master/\
src/cmasher/colormaps/seasons/seasons_norm.txt\>\"", ",", "\"\<Table\>\""}], 
     "]"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.942162485320957*^9, 3.942162492787602*^9}, {
  3.9568539101138697`*^9, 3.9568539396882544`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"2ff07cf1-6bd2-45d9-a0b6-3e98d9aa8bdd"],

Cell["\<\
And build the frames of the animation (note that we\[CloseCurlyQuote]re \
rotating the color palette a quarter turn):\
\>", "Text",
 CellChangeTimes->{{3.942167218112466*^9, 3.942167233464851*^9}, 
   3.942168348452271*^9, {3.942319199934444*^9, 3.942319200441284*^9}, {
   3.9568539638568907`*^9, 
   3.956853983519239*^9}},ExpressionUUID->"ae3d73b7-8fe5-463d-917d-\
5ef6a45e798e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phase", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g2", ",", "g3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"g2", ",", "g3"}], "}"}], "=", 
           RowBox[{"WeierstrassInvariants", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"Complex", "@@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"DiagonalMatrix", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SuperscriptBox["E", "s"], ",", 
                    SuperscriptBox["E", 
                    RowBox[{"-", "s"}]]}], "}"}], "]"}], ".", "P", ".", "#"}],
                  ")"}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ComplexPlot", "[", 
           RowBox[{
            RowBox[{"WeierstrassP", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox["E", 
                RowBox[{"I", 
                 RowBox[{"(", " ", 
                  RowBox[{"\[Pi]", "-", 
                   RowBox[{"ArcTan", "[", 
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    SqrtBox["2"]}]], "]"}]}], ")"}]}]], "z"}], ",", 
              RowBox[{"{", 
               RowBox[{"g2", ",", "g3"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", "8"}], "}"}], ",", 
            RowBox[{"ColorFunction", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Blend", "[", 
                 RowBox[{"cols", ",", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#8", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "1"}], "]"}]}], "]"}], 
                "&"}], ",", "None"}], "}"}]}], ",", 
            RowBox[{"Frame", "->", "False"}], ",", 
            RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
            RowBox[{"ImagePadding", "->", "None"}], ",", 
            RowBox[{"BoundaryStyle", "->", "None"}], ",", 
            RowBox[{"ImageSize", "->", "540"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"s", ",", "0.", ",", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Log", "[", 
              RowBox[{"1", "+", 
               SqrtBox["2"]}], "]"}]}], "-", "#"}], ",", "#"}], "}"}]}], 
        "]"}], "&"}], "[", 
      RowBox[{"2", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", 
          SqrtBox["2"]}], "]"}], "/", "100."}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.941285114238936*^9, 3.941285202321907*^9}, {
   3.9412852442607183`*^9, 3.941285247890255*^9}, {3.941285483772582*^9, 
   3.9412854848283787`*^9}, {3.941285937314911*^9, 3.941285937392518*^9}, {
   3.941286715946553*^9, 3.941286745600105*^9}, {3.9412868535042477`*^9, 
   3.94128691491197*^9}, 3.941293913287891*^9, 3.941298646834976*^9, {
   3.941299525502497*^9, 3.941299526311945*^9}, {3.941299907975498*^9, 
   3.941299912028623*^9}, {3.94130030636438*^9, 3.941300350982798*^9}, 
   3.94130045770757*^9, 3.941300757830704*^9, {3.941301368344404*^9, 
   3.941301376245648*^9}, {3.941303380619499*^9, 3.94130345984417*^9}, {
   3.941303761277939*^9, 3.941303774890435*^9}, {3.941307583370249*^9, 
   3.941307588746546*^9}, {3.941395827323732*^9, 3.941395827948743*^9}, {
   3.941623848235727*^9, 3.941623852146923*^9}, {3.941625979324695*^9, 
   3.941625995177544*^9}, {3.941626381404179*^9, 3.94162640336215*^9}, 
   3.941626722132385*^9, {3.942161743745444*^9, 3.942161769899077*^9}, {
   3.942162244741457*^9, 3.942162245154492*^9}, {3.942162482444841*^9, 
   3.9421625143306627`*^9}, {3.956853952146841*^9, 3.956853971919477*^9}, {
   3.956923872682308*^9, 3.956923873091501*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"660a67c7-ace4-46b3-8302-1984490aaf84"],

Cell["Which we can export to a GIF:", "Text",
 CellChangeTimes->{{3.9421672412649817`*^9, 
  3.942167245226922*^9}},ExpressionUUID->"98defb4a-bda3-4872-b1e3-\
eaa47da1ac8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<phase.gif\>\""}], 
    ",", "phase", ",", 
    RowBox[{"\"\<AnimationRepetitions\>\"", "->", "Infinity"}], ",", 
    RowBox[{"\"\<DisplayDurations\>\"", "->", 
     RowBox[{"1", "/", "50"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.881242601713378*^9, 3.881242622833569*^9}, {
   3.881245356535289*^9, 3.8812453589639893`*^9}, {3.881252769213448*^9, 
   3.8812527716117687`*^9}, {3.8812544711419697`*^9, 3.881254473483364*^9}, {
   3.881254975638689*^9, 3.881254977566316*^9}, {3.881255019619559*^9, 
   3.8812550218911743`*^9}, {3.881255915040683*^9, 3.881255917539617*^9}, {
   3.881257043492899*^9, 3.881257045679064*^9}, {3.881257825147398*^9, 
   3.881257827668778*^9}, {3.881258193744356*^9, 3.881258195903871*^9}, {
   3.88125901589303*^9, 3.881259019851747*^9}, {3.881325664096943*^9, 
   3.881325666044491*^9}, {3.88132742906355*^9, 3.881327457175032*^9}, {
   3.907622144252721*^9, 3.907622146607358*^9}, {3.907622288415255*^9, 
   3.907622289677395*^9}, 3.908370363850912*^9, 3.908379604525782*^9, {
   3.942167251656682*^9, 3.9421672520411587`*^9}, {3.956923880914628*^9, 
   3.95692388616611*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"97342e44-6f9b-479e-9e49-b3942c40b324"],

Cell[TextData[{
 "Or visualize directly using ",
 StyleBox["ListAnimate", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.942167257121578*^9, 
  3.942167263889268*^9}},ExpressionUUID->"978dcda7-80a7-4708-a66e-\
b7d1b2638eea"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"phase", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.942161799997245*^9, 3.942161830935797*^9}, {
  3.942162249243164*^9, 3.942162269240267*^9}, {3.942162343905388*^9, 
  3.9421623552691293`*^9}, {3.956923888127747*^9, 3.9569238885411243`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"654a67a6-e378-4969-a194-2c9090c81604"]
}, Open  ]]
},
WindowSize->{1163, 891},
WindowMargins->{{73, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3ed3133d-d950-42fc-81a7-bbef4b06ba0c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 196, 4, 123, "Title",ExpressionUUID->"be3fb36e-cbc3-4e1d-9ce9-a58e38fb442b"],
Cell[779, 28, 689, 18, 44, "Text",ExpressionUUID->"73bb5857-6b9d-4a07-8389-0236b856945b"],
Cell[1471, 48, 1063, 28, 73, "Text",ExpressionUUID->"64a0827f-10ff-408e-aba6-6fd0c748176b"],
Cell[2537, 78, 4460, 131, 197, "Text",ExpressionUUID->"f4d8a744-8125-4a9e-b7c5-d2128b5ba2ad"],
Cell[7000, 211, 966, 21, 131, "Text",ExpressionUUID->"2495a70f-8811-4504-a51b-20be3c24a3dc"],
Cell[7969, 234, 1708, 40, 224, "Text",ExpressionUUID->"80092950-0a10-4bde-a47a-51456024c322"],
Cell[9680, 276, 298, 8, 44, "Text",ExpressionUUID->"143abd80-cc3d-499f-92af-09bfe23bc03d"],
Cell[9981, 286, 1306, 36, 152, "Text",ExpressionUUID->"5c4cb8d4-4545-4396-acef-50a1899b5ddd"],
Cell[11290, 324, 571, 15, 44, "Text",ExpressionUUID->"469cf483-a136-4a05-ac18-0ae7f0607cd0"],
Cell[11864, 341, 1141, 33, 73, "Text",ExpressionUUID->"61f750c0-f2bf-49c5-816c-a8f7eedc301f"],
Cell[13008, 376, 2364, 72, 111, "Text",ExpressionUUID->"615f730f-0391-47ed-a0a9-f284a7cd12a9"],
Cell[15375, 450, 354, 10, 73, "Text",ExpressionUUID->"fbf2d266-d70f-48c3-8875-2dd8317be453"],
Cell[15732, 462, 709, 16, 44, "Text",ExpressionUUID->"30d4bc74-67fa-4a03-b446-d9e543c2f55f"],
Cell[CellGroupData[{
Cell[16466, 482, 2589, 69, 194, "Input",ExpressionUUID->"8bc86e56-db1e-4d9d-aa41-efbc832d252d"],
Cell[19058, 553, 94024, 1573, 745, "Output",ExpressionUUID->"f0451e37-45fb-4648-8e2b-245a32bc9304"]
}, Open  ]],
Cell[113097, 2129, 384, 8, 73, "Text",ExpressionUUID->"feba63a4-6721-401b-8d0c-897790654d37"],
Cell[113484, 2139, 269, 5, 44, "Text",ExpressionUUID->"124dbfc8-24c9-48e4-87e3-faf57945893d"],
Cell[CellGroupData[{
Cell[113778, 2148, 3056, 84, 309, "Input",ExpressionUUID->"b7ffef5d-25b7-44e4-bba3-b12c5e9dc251"],
Cell[116837, 2234, 88192, 1508, 745, "Output",ExpressionUUID->"1eeaa77e-e2bc-4a27-9af3-993d668ee8c1"]
}, Open  ]],
Cell[205044, 3745, 251, 6, 44, "Text",ExpressionUUID->"54942e70-88cf-4c7a-ab03-0cd82cb19bfa"],
Cell[205298, 3753, 1266, 33, 73, "Text",ExpressionUUID->"68c76ba3-2142-4afb-be16-ea8f173eb4ff"],
Cell[206567, 3788, 1206, 42, 79, "Text",ExpressionUUID->"71313f8e-6141-4bd2-9bbe-06f06a11ade0"],
Cell[207776, 3832, 433, 15, 66, "Input",ExpressionUUID->"93e05ba3-9848-40de-a53f-2fa524c03dac",
 InitializationCell->True],
Cell[208212, 3849, 374, 10, 44, "Text",ExpressionUUID->"042ce2e7-f7d9-4450-91b9-b8b730626ae1"],
Cell[CellGroupData[{
Cell[208611, 3863, 796, 22, 64, "Input",ExpressionUUID->"e8ea37ae-329b-4d71-9380-1036261c1097"],
Cell[209410, 3887, 53249, 927, 471, "Output",ExpressionUUID->"2e03942b-d440-445a-97a1-f0a4cfc03269"]
}, Open  ]],
Cell[262674, 4817, 217, 5, 44, "Text",ExpressionUUID->"40907a3a-ddd6-43e3-b0ab-48ebda37107d"],
Cell[CellGroupData[{
Cell[262916, 4826, 1270, 37, 64, "Input",ExpressionUUID->"2ff2deb5-5b7a-46bd-a8be-355621c1e2e0"],
Cell[264189, 4865, 10162, 254, 471, "Output",ExpressionUUID->"2ade16c3-9813-450c-afac-083cb7b0e94b"]
}, Open  ]],
Cell[274366, 5122, 1471, 50, 115, "Text",ExpressionUUID->"7c8f2752-765b-40bb-98f2-3a3f74a61a89"],
Cell[CellGroupData[{
Cell[275862, 5176, 3391, 101, 371, "Input",ExpressionUUID->"022ff354-38d6-48fd-9cf1-27981e31a983"],
Cell[279256, 5279, 4078, 80, 563, "Output",ExpressionUUID->"3ac86db5-22cf-4066-a38a-ff99298adf4e"]
}, Open  ]],
Cell[283349, 5362, 646, 16, 44, "Text",ExpressionUUID->"e0a959c0-cdb0-4e41-be0b-5478f6fedc8a"],
Cell[283998, 5380, 533, 12, 162, "Input",ExpressionUUID->"2ff07cf1-6bd2-45d9-a0b6-3e98d9aa8bdd",
 InitializationCell->True],
Cell[284534, 5394, 392, 8, 44, "Text",ExpressionUUID->"ae3d73b7-8fe5-463d-917d-5ef6a45e798e"],
Cell[284929, 5404, 4391, 102, 258, "Input",ExpressionUUID->"660a67c7-ace4-46b3-8302-1984490aaf84"],
Cell[289323, 5508, 173, 3, 44, "Text",ExpressionUUID->"98defb4a-bda3-4872-b1e3-eaa47da1ac8e"],
Cell[289499, 5513, 1334, 24, 64, "Input",ExpressionUUID->"97342e44-6f9b-479e-9e49-b3942c40b324"],
Cell[290836, 5539, 226, 7, 44, "Text",ExpressionUUID->"978dcda7-80a7-4708-a66e-b7d1b2638eea"],
Cell[291065, 5548, 389, 7, 37, "Input",ExpressionUUID->"654a67a6-e378-4969-a194-2c9090c81604"]
}, Open  ]]
}
]
*)

